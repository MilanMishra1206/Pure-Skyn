{"version":3,"file":"static/js/171.b5fa27f3.chunk.js","mappings":"oOAOA,SAASA,EAAgBC,GAmBrB,IAnBsB,UACxBC,EAAS,eACTC,EAAc,MACdC,EAAK,KACLC,EAAI,cACJC,EAAa,QACbC,EAAO,MACPC,EAAK,gBACLC,EAAe,aACfC,EAAY,aACZC,EAAY,cACZC,EAAa,kBACbC,EAAiB,QACjBC,EAAO,oBACPC,EAAmB,MACnBC,EAAK,WACLC,EAAU,YACVC,EAAW,KACXC,GACDlB,EACC,MAAOmB,EAAcC,IAAoBC,EAAAA,EAAAA,WAAS,GAG5CC,EAAWC,MAAQC,IAAI,EAAG,OAG1BC,EAA0BH,EAASE,IAAI,GAAI,OAUjD,OACEE,EAAAA,EAAAA,MAAA,OAAKzB,UAAS,GAAA0B,OAAKX,EAAU,kBAAiBY,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,KACEzB,UAAW4B,IAAW,2BAA4Bf,GAAqBc,SAAA,CAEtEzB,EACAM,IAAgBqB,EAAAA,EAAAA,KAAA,QAAM7B,UAAU,mBAAkB2B,SAAC,UAEtDE,EAAAA,EAAAA,KAAA,OACE7B,UAAS,GAAA0B,OAAK1B,EAAS,KAAA0B,OAAIpB,GAASD,GAAW,8BAA6B,WAAUsB,UAEtFE,EAAAA,EAAAA,KAAA,OAAK7B,UAAU,cAAa2B,UAC1BE,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAaL,UAC9CE,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CACTC,eAAa,EACbC,SAAU1B,EACVC,cAAeA,EACfM,YAAaA,EACbL,kBAAoByB,GAzBCA,IAE7Bd,IAAMc,GAAMC,SAAShB,EAAU,QAC/BC,IAAMc,GAAME,QAAQd,EAAyB,OAwBjCe,CAAwBH,IAAUzB,GAAqBA,EAAkByB,GAG7EpC,UAAS,GAAA0B,OAAKjB,GAAgB,+CAC9B+B,OAAQA,IAAMjC,EAAgBJ,GAAM,GACpCsC,OAAO,aACP3B,MAAOQ,IAAMR,EAAO,cACpB4B,MAAOzB,EAAO,CAAE0B,eAAgB1B,GAAS,CAAC,EAC1C2B,SAAWC,IAEN7B,GACCM,IAAMuB,GAAYR,SAChBf,IAAM,IAAIwB,MAAQC,SAAS,EAAG,SAEjCrC,GACCY,IAAMuB,GAAYP,QAAQhB,IAAM,IAAIwB,QAEtC3B,GAAiB,GACjBf,EAAcD,EAAM,MAEpBgB,GAAiB,GACjBf,EACED,EACA0C,EAAavB,IAAMuB,GAAYJ,OAAO,cAAgB,IAE1D,EAEFO,GAAI,CACF,qCAAsC,CACpCC,QAAS,GACTC,oBAAqB,wBAGzB/C,KAAMA,EACNS,QAASA,EACTuC,UAAW,CACTC,eAAgB,CACdC,QAAS,CACPC,KAAK,uCAGTC,UAAW,CACTC,QAAU,CAAC,eAAgB,IAAIC,SAAS3C,GAAS,IAE7C,GADA,CAAC,UAGP4C,UAAW,CACTC,QAAS,SACTxB,SAAU1B,EACVmD,YAAa,aACbC,OAAQA,IAAMtD,EAAgBJ,GAAM,GACpC2D,WAAW,EACXC,WAAY,CACVC,kBAAkB,EAClBX,QAAS,CACPY,MAAM,uGAADvC,OAAyGzB,GAC9GqD,KAAM,QACNY,WAAY,oCACZ/B,SAAU,gCAGdgC,gBAAiB,CACfd,QAAS,CACPC,KAAM,2FACNc,OAAQ,yCASvB/D,GAAWa,GACVW,EAAAA,EAAAA,KAAA,KAAG7B,UAAU,gCAA+B2B,SAAC,iBAE7CtB,GACAC,IAASuB,EAAAA,EAAAA,KAAA,KAAG7B,UAAU,gCAA+B2B,SAAErB,MAI/D,CAEA,SAAe+D,EAAAA,EAAAA,MAAKvE,E","sources":["shared/CustomDatePicker/index.jsx"],"sourcesContent":["import { memo, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport classNames from \"classnames\";\n\nfunction CustomDatePicker({\n  className,\n  inputClassName,\n  label,\n  name,\n  setFieldValue,\n  touched,\n  error,\n  setFieldTouched,\n  requiredStar,\n  disableField,\n  disableFuture,\n  shouldDisableDate,\n  minDate,\n  textClassToOverride,\n  value,\n  fieldWidth,\n  disablePast,\n  icon,\n}) {\n  const [isIvalidDate, setIsInvalidDate] = useState(false);\n\n  // Calculate tomorrow's date\n  const tomorrow = dayjs().add(1, \"day\");\n\n  // Calculate 15 days from tomorrow\n  const fifteenDaysFromTomorrow = tomorrow.add(15, \"day\");\n\n  // Disable today's date and dates 15 days from tomorrow\n  const shouldDisableCustomDate = (date) => {\n    return (\n      dayjs(date).isBefore(tomorrow, \"day\") || // Disable today\n      dayjs(date).isAfter(fifteenDaysFromTomorrow, \"day\") // Disable beyond 15 days\n    );\n  };\n\n  return (\n    <div className={`${fieldWidth} flex flex-col`}>\n      <p\n        className={classNames(\"text-sm font-medium pb-1\", textClassToOverride)}\n      >\n        {label}\n        {requiredStar && <span className=\"text-bitterSweet\">*</span>}\n      </p>\n      <div\n        className={`${className} ${error && touched && \"!border !border-bitterSweet\"} border`}\n      >\n        <div className=\"rounded-lg \">\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <DatePicker\n              closeOnSelect\n              disabled={disableField}\n              disableFuture={disableFuture}\n              disablePast={disablePast}\n              shouldDisableDate={(date) => {\n                return (\n                  shouldDisableCustomDate(date) || (shouldDisableDate && shouldDisableDate(date))\n                );\n              }}\n              className={`${disableField && \"bg-solitude-1 rounded-lg !shadow-insetLight\"}`}\n              onOpen={() => setFieldTouched(name, true)}\n              format=\"DD/MM/YYYY\"\n              value={dayjs(value, \"DD/MM/YYYY\")}\n              slots={icon ? { openPickerIcon: icon } : {}}\n              onChange={(fieldValue) => {\n                if (\n                  (disablePast &&\n                    dayjs(fieldValue).isBefore(\n                      dayjs(new Date()).subtract(1, \"day\")\n                    )) ||\n                  (disableFuture &&\n                    dayjs(fieldValue).isAfter(dayjs(new Date())))\n                ) {\n                  setIsInvalidDate(true);\n                  setFieldValue(name, \"\");\n                } else {\n                  setIsInvalidDate(false);\n                  setFieldValue(\n                    name,\n                    fieldValue ? dayjs(fieldValue).format(\"DD/MM/YYYY\") : \"\"\n                  );\n                }\n              }}\n              sx={{\n                \"& .MuiInputBase-input.Mui-disabled\": {\n                  opacity: 10,\n                  WebkitTextFillColor: \"rgba(0, 0, 0, 0.93)\",\n                },\n              }}\n              name={name}\n              minDate={minDate}\n              slotProps={{\n                inputAdornment: {\n                  classes: {\n                    root: `!mr-0.5 !z-10 !p-3 !bg-transparent`,\n                  },\n                },\n                actionBar: {\n                  actions: ![\"Invalid Date\", \"\"].includes(value || \"\")\n                    ? [\"clear\"]\n                    : [],\n                },\n                textField: {\n                  variant: \"filled\",\n                  disabled: disableField,\n                  placeholder: \"DD/MM/YYYY\",\n                  onBlur: () => setFieldTouched(name, true),\n                  fullWidth: true,\n                  InputProps: {\n                    disableUnderline: true,\n                    classes: {\n                      input: `!text-sm !cursor-pointer !leading-5 !font-medium !rounded-lg !bg-transparent !py-4 !font-montserrat ${inputClassName}`,\n                      root: \"!mt-0\",\n                      adornedEnd: \"!bg-transparent !rounded-lg !mr-1\",\n                      disabled: \"!bg-gray-200 !text-disabled\",\n                    },\n                  },\n                  InputLabelProps: {\n                    classes: {\n                      root: \" !text-sm !leading-5 !font-medium !text-platinumGranite !pt-0.5 !pb-0.5 !font-montserrat\",\n                      shrink: \"!text-purpleComet !text-xs\",\n                    },\n                  },\n                },\n              }}\n            />\n          </LocalizationProvider>\n        </div>\n      </div>\n      {touched && isIvalidDate ? (\n        <p className=\"mt-1 text-xs text-bitterSweet\">Invalid Date</p>\n      ) : (\n        touched &&\n        error && <p className=\"mt-1 text-xs text-bitterSweet\">{error}</p>\n      )}\n    </div>\n  );\n}\n\nexport default memo(CustomDatePicker);\n"],"names":["CustomDatePicker","_ref","className","inputClassName","label","name","setFieldValue","touched","error","setFieldTouched","requiredStar","disableField","disableFuture","shouldDisableDate","minDate","textClassToOverride","value","fieldWidth","disablePast","icon","isIvalidDate","setIsInvalidDate","useState","tomorrow","dayjs","add","fifteenDaysFromTomorrow","_jsxs","concat","children","classNames","_jsx","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","closeOnSelect","disabled","date","isBefore","isAfter","shouldDisableCustomDate","onOpen","format","slots","openPickerIcon","onChange","fieldValue","Date","subtract","sx","opacity","WebkitTextFillColor","slotProps","inputAdornment","classes","root","actionBar","actions","includes","textField","variant","placeholder","onBlur","fullWidth","InputProps","disableUnderline","input","adornedEnd","InputLabelProps","shrink","memo"],"sourceRoot":""}