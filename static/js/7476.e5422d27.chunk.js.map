{"version":3,"file":"static/js/7476.e5422d27.chunk.js","mappings":"yQAWA,MAAMA,GAAeC,EAAAA,EAAAA,OAAK,IAAM,yCA8GhC,QA5GA,WACE,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,aAAaG,WACzDC,GAAWC,EAAAA,EAAAA,GAAc,sBACzBC,GAAWD,EAAAA,EAAAA,GAAc,wBAExBE,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IAE7CC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,eAAeC,QAAQ,SAEnCL,IADEG,EAIJ,GACC,CAACC,eAAeC,QAAQ,WAE3B,MAMMC,EAAc,EAClBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAEHC,GAAG,IACHC,UAAU,gEAA+DC,SAC1E,QAHK,MAMNJ,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAEHC,GAAG,YACHG,QAjBsBC,KACxBvB,EAAS,aACTc,eAAeU,WAAW,mBAC1BV,eAAeU,WAAW,gBAAgB,EAexCJ,UAAU,gEAA+DC,SAC1E,YAJK,MAONJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAASL,UAAU,qCAAoCC,SAAC,iBAAnD,MAKlB,OACEK,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAUC,EAAAA,EAAAA,GAAc,OAAQ,IAChCC,QAAQ,SACRC,YAAY,OACZC,SAAU,CAAEC,MAAM,GAClBd,UAAS,QAAAe,OAAU3B,EAAW,OAAS,aAAca,SAAA,EAErDJ,EAAAA,EAAAA,KAACmB,EAAAA,SAAQ,CAAAf,UACPJ,EAAAA,EAAAA,KAACnB,EAAY,CAACuC,MAAM,OAEtBX,EAAAA,EAAAA,MAAA,OAAKN,UAAS,QAAAe,OAAU7B,EAAW,OAAS,QAASe,SAAA,EACnDJ,EAAAA,EAAAA,KAACqB,EAAAA,EAAW,CACVC,UAAU,IACV,aAAW,aACXnB,UAAU,YAAWC,SAEpBL,KAEHU,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAUC,EAAAA,EAAAA,GAAc,KAAM,IAC9BC,QAAQ,SACRC,YAAY,OACZC,SAAU,CAAEC,MAAM,GAAOb,SAAA,EAEzBJ,EAAAA,EAAAA,KAAA,OACEuB,IAAKC,EAAAA,EAAUC,OAAOC,OAAOC,+BAC7BC,IAAI,2BACJzB,UAAU,sBAEVH,EAAAA,EAAAA,KAAA,OACAuB,IAAKC,EAAAA,EAAUC,OAAOC,OAAOC,+BAC7BC,IAAI,2BACJzB,UAAU,wBAGblB,EAAa4C,OAAS,GACrB7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAc,CAACtC,WAAYA,KAE5BiB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,+DAA8DC,SAAA,EAC3EJ,EAAAA,EAAAA,KAAA,OACEuB,IAAKC,EAAAA,EAAUC,OAAOC,OAAOK,UAC7B5B,UAAU,gBACVyB,IAAI,gBAEN5B,EAAAA,EAAAA,KAAA,KAAGG,UAAU,0CAAyCC,SAAC,+CAGvDK,EAAAA,EAAAA,MAAA,UACEN,UAAU,oMACVE,QAASA,KACPtB,EAAS,YAAY,EACrBqB,SAAA,EAEFJ,EAAAA,EAAAA,KAACgC,EAAAA,IAAU,CAACC,KAAK,WAAW,2BAQ1C,ECjHA,QAJA,WACE,OAAOjC,EAAAA,EAAAA,KAACkC,EAAY,GACtB,C,iGCMA,MAAMC,UAAwBC,EAAAA,UAC1BC,uBAAAA,CAAwBC,GACpB,MAAMC,EAAUC,KAAKC,MAAMC,SAASC,QACpC,GAAIJ,GAAWD,EAAUM,YAAcJ,KAAKC,MAAMG,UAAW,CACzD,MAAMX,EAAOO,KAAKC,MAAMI,QAAQF,QAChCV,EAAKa,OAASP,EAAQQ,cAAgB,EACtCd,EAAKe,MAAQT,EAAQU,aAAe,EACpChB,EAAKiB,IAAMX,EAAQY,UACnBlB,EAAKmB,KAAOb,EAAQc,UACxB,CACA,OAAO,IACX,CAIAC,kBAAAA,GAAuB,CACvBC,MAAAA,GACI,OAAOf,KAAKC,MAAMrC,QACtB,EAEJ,SAASoD,EAAQC,GAA0B,IAAzB,SAAErD,EAAQ,UAAEwC,GAAWa,EACrC,MAAMC,GAAKC,EAAAA,EAAAA,SACLC,GAAMC,EAAAA,EAAAA,QAAO,MACb5B,GAAO4B,EAAAA,EAAAA,QAAO,CAChBb,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,KAEJ,MAAEU,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAkC7B,OAxBAC,EAAAA,EAAAA,qBAAmB,KACf,MAAM,MAAEjB,EAAK,OAAEF,EAAM,IAAEI,EAAG,KAAEE,GAASnB,EAAKU,QAC1C,GAAIC,IAAcgB,EAAIjB,UAAYK,IAAUF,EACxC,OACJc,EAAIjB,QAAQuB,QAAQC,YAAcT,EAClC,MAAMU,EAAQC,SAASC,cAAc,SAerC,OAdIR,IACAM,EAAMN,MAAQA,GAClBO,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCAADxD,OACDwC,EAAE,yEAAAxC,OAEd8B,EAAK,wCAAA9B,OACJ4B,EAAM,qCAAA5B,OACTgC,EAAG,sCAAAhC,OACFkC,EAAI,0CAIT,KACHiB,SAASE,KAAKI,YAAYP,EAAM,CACnC,GACF,CAACxB,KACIgC,EAAAA,EAAAA,KAAIzC,EAAiB,CAAES,UAAWA,EAAWF,SAAUkB,EAAKf,QAASZ,EAAM7B,SAAUgC,EAAAA,aAAmBhC,EAAU,CAAEwD,SAChI,CClEA,MAAMiB,EAAgBpB,IAA4F,IAA3F,SAAErD,EAAQ,QAAEU,EAAO,UAAE8B,EAAS,eAAEkC,EAAc,OAAEC,EAAM,sBAAEC,EAAqB,KAAEC,GAAOxB,EACzG,MAAMyB,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/B1B,GAAKC,EAAAA,EAAAA,SACL0B,GAAyBC,EAAAA,EAAAA,cAAaC,IACxCL,EAAiBM,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcP,EAAiBQ,SACtC,IAAKD,EACD,OAERX,GAAkBA,GAAgB,GACnC,CAACI,EAAkBJ,IAChBa,GAAUC,EAAAA,EAAAA,UAAQ,KAAM,CAC1BlC,KACA5C,UACA8B,YACAmC,SACAD,eAAgBO,EAChBQ,SAAWN,IACPL,EAAiBM,IAAID,GAAS,GACvB,IAAML,EAAiBY,OAAOP,OAQ7CP,EACM,CAACe,KAAKC,SAAUX,GAChB,CAACzC,EAAWyC,IAiBlB,OAhBAO,EAAAA,EAAAA,UAAQ,KACJV,EAAiBe,SAAQ,CAACC,EAAGC,IAAQjB,EAAiBM,IAAIW,GAAK,IAAO,GACvE,CAACvD,IAKJR,EAAAA,WAAgB,MACXQ,IACIsC,EAAiBjD,MAClB6C,GACAA,GAAgB,GACrB,CAAClC,IACS,cAATqC,IACA7E,GAAWwE,EAAAA,EAAAA,KAAIpB,EAAU,CAAEZ,UAAWA,EAAWxC,SAAUA,MAEvDwE,EAAAA,EAAAA,KAAIwB,EAAAA,EAAgBC,SAAU,CAAEC,MAAOX,EAASvF,SAAUA,GAAW,EAEjF,SAASgF,IACL,OAAO,IAAImB,GACf,C,cCxDA,MAAMC,EAAeC,GAAUA,EAAMN,KAAO,GAC5C,SAASO,EAAatG,GAClB,MAAMuG,EAAW,GAMjB,OAJAC,EAAAA,SAASX,QAAQ7F,GAAWqG,KACpBI,EAAAA,EAAAA,gBAAeJ,IACfE,EAASG,KAAKL,EAAM,IAErBE,CACX,C,cCgCA,MAAMI,EAAkBtD,IAA2H,IAA1H,SAAErD,EAAQ,OAAE2E,EAAM,QAAEjE,GAAU,EAAI,eAAEgE,EAAc,sBAAEE,GAAwB,EAAI,KAAEC,EAAO,OAAM,UAAE+B,GAAY,GAAQvD,EAC1I,MAAOwD,EAAiBC,IAAgBC,EAAAA,EAAAA,IAAYH,GAK9CI,GAAkBxB,EAAAA,EAAAA,UAAQ,IAAMc,EAAatG,IAAW,CAACA,IAKzDiH,EAAcL,IAAcC,EAAkB,GAAKG,EAAgBE,IAAId,GAIvEe,GAAkB1D,EAAAA,EAAAA,SAAO,GAMzB2D,GAAyB3D,EAAAA,EAAAA,QAAOuD,GAIhCK,GAAetC,EAAAA,EAAAA,IAAY,IAAM,IAAIoB,OAKpCmB,EAAgBC,IAAqBjI,EAAAA,EAAAA,UAAS0H,IAC9CQ,EAAkBC,IAAuBnI,EAAAA,EAAAA,UAAS0H,IACzDU,EAAAA,EAAAA,IAA0B,KACtBP,EAAgB5E,SAAU,EAC1B6E,EAAuB7E,QAAUyE,EAIjC,IAAK,IAAIW,EAAI,EAAGA,EAAIH,EAAiB/F,OAAQkG,IAAK,CAC9C,MAAM5B,EAAMK,EAAYoB,EAAiBG,IACpCV,EAAYW,SAAS7B,GAMtBsB,EAAa3B,OAAOK,IALU,IAA1BsB,EAAaQ,IAAI9B,IACjBsB,EAAajC,IAAIW,GAAK,EAMlC,IACD,CAACyB,EAAkBP,EAAYxF,OAAQwF,EAAYa,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAIf,IAAoBM,EAAgB,CACpC,IAAIU,EAAe,IAAIhB,GAKvB,IAAK,IAAIW,EAAI,EAAGA,EAAIH,EAAiB/F,OAAQkG,IAAK,CAC9C,MAAMtB,EAAQmB,EAAiBG,GACzB5B,EAAMK,EAAYC,GACnBY,EAAYW,SAAS7B,KACtBiC,EAAaC,OAAON,EAAG,EAAGtB,GAC1B0B,EAAgBrB,KAAKL,GAE7B,CAcA,MATa,SAATxB,GAAmBkD,EAAgBtG,SACnCuG,EAAeD,GAEnBN,EAAoBnB,EAAa0B,SACjCT,EAAkBP,EAMtB,CAWA,MAAM,YAAEkB,IAAgBvE,EAAAA,EAAAA,YAAWwE,EAAAA,GACnC,OAAQ3D,EAAAA,EAAAA,KAAI4D,EAAAA,SAAU,CAAEpI,SAAUwH,EAAiBN,KAAKb,IAChD,MAAMN,EAAMK,EAAYC,GAClB7D,IAAYoE,IAAcC,KAE1BG,IAAoBQ,GAClBP,EAAYW,SAAS7B,IAoB7B,OAAQvB,EAAAA,EAAAA,KAAIC,EAAe,CAAEjC,UAAWA,EAAW9B,UAAUyG,EAAgB5E,UAAW7B,SAC9E2H,EACO1D,OAAQnC,OAAY6F,EAAY1D,EAAQC,sBAAuBA,EAAuBC,KAAMA,EAAMH,eAAgBlC,OAAY6F,EArBhIC,KACX,IAAIjB,EAAakB,IAAIxC,GAIjB,OAHAsB,EAAajC,IAAIW,GAAK,GAK1B,IAAIyC,GAAsB,EAC1BnB,EAAaxB,SAAS4C,IACbA,IACDD,GAAsB,EAAK,IAE/BA,IACgB,OAAhBN,QAAwC,IAAhBA,GAAkCA,IAC1DT,EAAoBL,EAAuB7E,SAC3CqE,IAA+B,OAAjBE,QAA0C,IAAjBA,GAAmCA,KAC1EpC,GAAkBA,IACtB,EAI+J1E,SAAUqG,GAASN,EAAI,KACzL,C","sources":["components/BookNow/ServicesCart/index.jsx","pages/PureSkynServicesCart/index.jsx","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs"],"sourcesContent":["import { lazy, Suspense, useEffect, useState } from \"react\";\nimport { Breadcrumbs, Typography, useMediaQuery } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FaCartPlus } from \"react-icons/fa\";\n\nimport BookNowDetails from \"../BookNowDetails\";\nimport FadeInWrapper from \"../../../config/MotionFramer/FadeInWrapper\";\nimport Resources from \"../../../config/Resources\";\n\nconst CustomLoader = lazy(() => import(\"../../../shared/CustomLoader\"));\n\nfunction ServicesCart() {\n  const navigate = useNavigate();\n  const servicesCart = useSelector((state) => state.servicesCart.services);\n  const isMobile = useMediaQuery(\"(max-width: 767px)\");\n  const isTablet = useMediaQuery(\"(max-width: 1023px)\");\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"token\");\n    if (token) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, [sessionStorage.getItem(\"token\")]);\n\n  const navigateToBookNow = () => {\n    navigate(\"/book-now\");\n    sessionStorage.removeItem(\"currentBookStep\");\n    sessionStorage.removeItem(\"treatmentName\");\n  };\n\n  const breadcrumbs = [\n    <Link\n      key=\"1\"\n      to=\"/\"\n      className=\"text-skyn no-underline !font-poppins hover:opacity-80 text-lg\"\n    >\n      Home\n    </Link>,\n    <Link\n      key=\"2\"\n      to=\"/book-now\"\n      onClick={navigateToBookNow}\n      className=\"text-skyn no-underline !font-poppins hover:opacity-80 text-lg\"\n    >\n      Book Now\n    </Link>,\n    <Typography key=\"3\" className=\"!text-cello !font-poppins !text-lg\">\n      Services Cart\n    </Typography>,\n  ];\n\n  return (\n    <motion.div\n      variants={FadeInWrapper(\"left\", 0.1)}\n      initial=\"hidden\"\n      whileInView=\"show\"\n      viewport={{ once: true }}\n      className={`mt-3 ${isTablet ? \"py-3\" : \"py-4 mt-4\"}`}\n    >\n      <Suspense>\n        <CustomLoader open={false} />\n      </Suspense>\n      <div className={`mt-5 ${isMobile ? \"px-4\" : \"px-5\"}`}>\n        <Breadcrumbs\n          separator=\">\"\n          aria-label=\"breadcrumb\"\n          className=\"mb-4 px-1\"\n        >\n          {breadcrumbs}\n        </Breadcrumbs>\n        <motion.div\n          variants={FadeInWrapper(\"up\", 0.1)}\n          initial=\"hidden\"\n          whileInView=\"show\"\n          viewport={{ once: true }}\n        >\n          <img\n            src={Resources.images.Common.fiftyPercentAfterServiceBanner}\n            alt=\"50% After Service Banner\"\n            className=\"hidden md:!block\"\n            />\n            <img\n            src={Resources.images.Common.fiftyPercentAfterServiceBanner}\n            alt=\"50% After Service Banner\"\n            className=\"block md:!hidden\"\n            />\n        </motion.div>\n        {servicesCart.length > 0 ? (\n          <BookNowDetails isLoggedIn={isLoggedIn} />\n        ) : (\n          <div className=\"flex flex-col items-center justify-center px-2 md:!px-5 pb-5\">\n            <img\n              src={Resources.images.Common.emptyCart}\n              className=\"h-52 md:!h-96\"\n              alt=\"Empty Cart\"\n            />\n            <p className=\"text-xl font-bold text-center text-coal\">\n              No Services Added. Let's add some! âš¡\n            </p>\n            <button\n              className=\"flex gap-2 items-center justify-center rounded-3xl font-medium px-4 active:!bg-white active:!text-skyn bg-skyn text-white hover:!opacity-80 active:!border-none transition duration-500 py-2 mt-4\"\n              onClick={() => {\n                navigate(\"/book-now\");\n              }}\n            >\n              <FaCartPlus size=\"1.2rem\" />\n              Book Services\n            </button>\n          </div>\n        )}\n      </div>\n    </motion.div>\n  );\n}\n\nexport default ServicesCart;\n","import ServicesCart from \"../../components/BookNow/ServicesCart\";\n\nfunction PureSkynServicesCart() {\n  return <ServicesCart />;\n}\n\nexport default PureSkynServicesCart;\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n"],"names":["CustomLoader","lazy","navigate","useNavigate","servicesCart","useSelector","state","services","isMobile","useMediaQuery","isTablet","isLoggedIn","setIsLoggedIn","useState","useEffect","token","sessionStorage","getItem","breadcrumbs","_jsx","Link","to","className","children","onClick","navigateToBookNow","removeItem","Typography","_jsxs","motion","div","variants","FadeInWrapper","initial","whileInView","viewport","once","concat","Suspense","open","Breadcrumbs","separator","src","Resources","images","Common","fiftyPercentAfterServiceBanner","alt","length","BookNowDetails","emptyCart","FaCartPlus","size","ServicesCart","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","_ref","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete"],"sourceRoot":""}