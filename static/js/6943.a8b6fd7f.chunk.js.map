{"version":3,"file":"static/js/6943.a8b6fd7f.chunk.js","mappings":"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","sources":["components/BookNow/BookNowDetails/BookNowForm/index.jsx","components/BookNow/BookNowDetails/index.jsx","components/ProductsCart/ConfirmationModal/index.jsx","services/Booking/index.js","shared/CustomButton2/index.jsx","shared/CustomDrawCircleText/index.jsx","shared/CustomHrTag/index.jsx"],"sourcesContent":["import { lazy, Suspense, useEffect, useState } from \"react\";\nimport { getIn } from \"formik\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport FadedLineBreak from \"../../../../shared/CustomHrTag\";\nimport { regex } from \"../../../../helpers/Regex\";\nimport { useSelector } from \"react-redux\";\n\nconst CustomTextField = lazy(\n  () => import(\"../../../../shared/CustomTextField\")\n);\nconst CustomDropdown = lazy(() => import(\"../../../../shared/CustomDropdown\"));\nconst CustomDatePicker = lazy(\n  () => import(\"../../../../shared/CustomDatePicker\")\n);\n\nfunction BookNowForm({ isLoggedIn, formik, timeSlots }) {\n  const navigate = useNavigate();\n  const userProfile = useSelector((state) => state.userProfile.userProfile);\n\n  const [userAddressOptions, setUserAddressOptions] = useState([]);\n\n  useEffect(() => {\n    const userAddresses = userProfile.addresses.map((address) => ({\n      label: `${address.fullName}, ${address.addressLine1}, ${address.addressLine2}, \n              ${address.city}, ${address.state} - ${address.pinCode}, ${address.phone}`,\n      value: address.id,\n    }));\n    setUserAddressOptions(userAddresses);\n  }, [userProfile]);\n\n  return (\n    <>\n      <form className=\"w-full\">\n        <div className=\"p-4\">\n          <div className=\"text-2xl font-poppins text-center font-extrabold\">\n            Please Share Booking Details\n          </div>\n          <FadedLineBreak />\n          <div className=\"text-left text-lg md:p-5 ml-2 mb-4 md:!mb-0\">\n            {!isLoggedIn && (\n              <p className=\"text-sm font-bold\">\n                <button\n                  className=\"text-[#175EC3] hover:opacity-80\"\n                  onClick={() => navigate(\"/login\")}\n                >\n                  Sign-In\n                </button>{\" \"}\n                to fetch your details\n              </p>\n            )}\n          </div>\n          <div className=\"grid md:grid-cols-2 gap-4 md:p-5\">\n            <Suspense fallback={<div />}>\n              <CustomTextField\n                textClassOverride=\"!text-kashmirBlue\"\n                placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                className=\"h-12 rounded-md !bg-transparent\"\n                placeholder=\"Enter\"\n                requiredStar\n                labelToShow=\"Name\"\n                name=\"name\"\n                textFieldColorClass=\"shadow-insetLight\"\n                inputClassName=\"!bg-transparent\"\n                fieldWidth=\"w-full !mb-4\"\n                value={formik.values?.name}\n                onChange={formik.handleChange}\n                handleBlur={formik.handleBlur}\n                error={formik.errors.name}\n                touched={formik.touched.name}\n              />\n            </Suspense>\n            <Suspense fallback={<div />}>\n              <CustomTextField\n                textClassOverride=\"!text-kashmirBlue\"\n                placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                className=\"h-12 rounded-md !bg-transparent\"\n                placeholder=\"Enter\"\n                requiredStar\n                regex={/^[^!#$%^&*()=+{}[\\]:;<>,?/~`|\"\\\\ ]*$/}\n                labelToShow=\"Email ID\"\n                name=\"email\"\n                textFieldColorClass=\"shadow-insetLight\"\n                inputClassName=\"!bg-transparent\"\n                fieldWidth=\"!mb-4\"\n                maxLength={50}\n                value={formik.values?.email}\n                onChange={formik.handleChange}\n                handleBlur={formik.handleBlur}\n                error={formik.errors?.email}\n                touched={formik.touched?.email}\n              />\n            </Suspense>\n            <Suspense fallback={<div />}>\n              <CustomTextField\n                textClassOverride=\"!text-kashmirBlue\"\n                placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                className=\"h-12 rounded-md !bg-transparent\"\n                placeholder=\"Enter\"\n                requiredStar\n                labelToShow=\"Mobile Number\"\n                name=\"mobile\"\n                maxLength={10}\n                regex={regex.numeric}\n                textFieldColorClass=\"shadow-insetLight\"\n                inputClassName=\"!bg-transparent\"\n                fieldWidth=\"!mb-4\"\n                value={formik.values.mobile}\n                onChange={formik.handleChange}\n                handleBlur={formik.handleBlur}\n                error={formik.errors.mobile}\n                touched={formik.touched.mobile}\n              />\n            </Suspense>\n            <Suspense fallback={<div />}>\n              <div>\n                <CustomDropdown\n                  textClassOverride=\"!text-kashmirBlue\"\n                  classes=\"!rounded-md !mb-4\"\n                  requiredStar\n                  labelToShow=\"Select Address\"\n                  name=\"address\"\n                  showIconOutline\n                  options={userAddressOptions}\n                  value={formik.values.address}\n                  handleBlur={formik.handleBlur}\n                  handleChange={formik.handleChange}\n                  errorMessage={getIn(formik.errors, \"address\")}\n                  error={getIn(formik.errors, \"address\")}\n                  touched={getIn(formik.touched, \"address\")}\n                />\n                <div>\n                  <Link\n                    className=\"text-sm underline text-skyn hover:opacity-80\"\n                    to=\"/user-profile#Address\"\n                  >\n                    Add Address\n                  </Link>\n                </div>\n              </div>\n            </Suspense>\n            <Suspense fallback={<div />}>\n              <CustomDropdown\n                textClassOverride=\"!text-kashmirBlue\"\n                classes=\"!rounded-md !mb-4\"\n                requiredStar\n                labelToShow=\"Select City\"\n                name=\"city\"\n                showIconOutline\n                options={[\n                  { label: \"Gurgaon\", value: \"Gurgaon\" },\n                  {\n                    label: \"South Delhi\",\n                    value: \"South Delhi\",\n                  },\n                ]}\n                value={formik.values.city}\n                handleBlur={formik.handleBlur}\n                handleChange={formik.handleChange}\n                errorMessage={getIn(formik.errors, \"city\")}\n                error={getIn(formik.errors, \"city\")}\n                touched={getIn(formik.touched, \"city\")}\n              />\n            </Suspense>\n            <div className=\"mb-4\">\n              <Suspense fallback={<div />}>\n                <CustomDatePicker\n                  label=\"Treatment Date\"\n                  name=\"treatmentDate\"\n                  textClassToOverride=\"!text-kashmirBlue\"\n                  requiredStar\n                  disablePast\n                  className=\"w-full rounded-md !bg-transparent shadow-insetLight\"\n                  fieldWidth=\"!w-full\"\n                  setFieldValue={formik.setFieldValue}\n                  setFieldTouched={formik.setFieldTouched}\n                  value={formik.values.treatmentDate}\n                  error={formik.errors.treatmentDate}\n                  touched={formik.touched.treatmentDate}\n                  inputClassName=\"!text-kashmirBlue !font-poppins\"\n                  onChange={formik.handleChange}\n                  handleBlur={formik.handleBlur}\n                />\n              </Suspense>\n            </div>\n            <div className=\"mb-4\">\n              <label\n                htmlFor=\"timeSlot\"\n                className=\"text-sm font-medium pb-1 !text-kashmirBlue\"\n              >\n                Select Appointment Time <span className=\"text-bitterSweet\">*</span>\n              </label>\n              <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                {timeSlots.map((slot, index) => (\n                  <button\n                    key={index}\n                    type=\"button\"\n                    onClick={() => formik.setFieldValue(\"timeSlot\", slot)}\n                    className={`p-2 rounded text-sm font-bold transition-all shadow-md ${\n                      formik.values.timeSlot === slot\n                        ? \"bg-skyn text-white border-skyn\"\n                        : \"bg-white text-gray-700 hover:!bg-gray-100\"\n                    }`}\n                  >\n                    {slot}\n                  </button>\n                ))}\n              </div>\n              {formik.errors.timeSlot && formik.touched.timeSlot && (\n                <p className=\"mt-1 ml-1 text-xs text-bitterSweet\">\n                  {formik.errors.timeSlot}*\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default BookNowForm;\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { MdDeleteForever, MdOutlineShoppingCartCheckout } from \"react-icons/md\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { useMutation } from \"react-query\";\n\nimport CustomButton2 from \"../../../shared/CustomButton2\";\nimport BookNowForm from \"./BookNowForm\";\nimport { removeFromServicesCart } from \"../../../redux/Actions\";\nimport ConfirmationModal from \"../../ProductsCart/ConfirmationModal\";\nimport FadedLineBreak from \"../../../shared/CustomHrTag\";\nimport { getBookNowFormValidation } from \"../../../helpers/Login\";\nimport { createNewBooking } from \"../../../services/Booking\";\nimport { useAppSnackbar } from \"../../../config/Context/SnackbarContext\";\nimport { INRCurrency } from \"../../../helpers/Regex\";\n\nconst CustomLoader = lazy(() => import(\"../../../shared/CustomLoader\"));\n\nconst BookNowDetails = ({ isLoggedIn }) => {\n  const userProfile = useSelector((state) => state.userProfile.userProfile);\n  const servicesCart = useSelector((state) => state.servicesCart.services);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const showSnackbar = useAppSnackbar();\n  const [packagePrice, setPackagePrice] = useState(0);\n  const [removeItem, setRemoveItem] = useState(false);\n  const [subServiceId, setSubServiceId] = useState(\"\");\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    email: \"\",\n    mobile: \"\",\n    address: \"\",\n    treatmentDate: \"\",\n    timeSlot: \"\",\n    city: \"\",\n  });\n\n  useEffect(() => {\n    const storedTimeSlots = sessionStorage.getItem(\"availableTimeSlots\");\n    setTimeSlots(\n      storedTimeSlots\n        ? JSON.parse(storedTimeSlots)\n        : [\"10:00 AM\", \"12:00 PM\", \"2:00 PM\", \"4:00 PM\"]\n    );\n  }, [sessionStorage.getItem(\"availableTimeSlots\")]);\n\n  useEffect(() => {\n    isLoggedIn &&\n      setInitialValues({\n        name: userProfile.name || \"\",\n        email: userProfile.email || \"\",\n        mobile: userProfile.phone || \"\",\n        address: \"\",\n        city: \"\",\n        treatmentDate: \"\",\n        timeSlot: \"\",\n      });\n  }, [isLoggedIn, userProfile]);\n\n  const { mutate: createBooking, isLoading } = useMutation(createNewBooking, {\n    onSuccess(res) {\n      if (res?.isError) {\n        showSnackbar(res?.message, \"success\");\n      } else {\n        showSnackbar(res?.message, \"error\");\n      }\n    },\n    onError(error) {\n      showSnackbar(error?.message, \"error\");\n    },\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    validateOnMount: true,\n    validateOnChange: true,\n    initialValues,\n    validationSchema: getBookNowFormValidation,\n    onSubmit: (values) => {\n      // createBooking({\n      //   userId: \"A12\",\n      //   serviceId: \"LHR\",\n      //   name: value.name,\n      //   email: value.email,\n      //   mobile: value.mobile,\n      //   address: value.address,\n      //   treatmentDate: value.treatmentDate,\n      //   timeSlot: value.treatment,\n      //   pinCode: \"342001\", //to be fetched from Address API\n      // });\n      const servicesBooked = Array.isArray(servicesCart)\n        ? servicesCart.map(\n            ({\n              treatmentName = \"\",\n              packageName = \"\",\n              serviceId = \"\",\n              subServiceId = \"\",\n              packagePrice = 0,\n              featureName = \"\",\n              selectedPackageImg = \"\",\n              strikeOutPrice = null,\n            }) => ({\n              treatmentName,\n              packageName,\n              serviceId,\n              subServiceId,\n              packagePrice,\n              featureName,\n              selectedPackageImg,\n              strikeOutPrice,\n            })\n          )\n        : [];\n      const reqBody = {\n        userInfo: values,\n        servicesBooked,\n      };\n      console.log(\"reqBody\", reqBody);\n    },\n  });\n\n  useEffect(() => {\n    const totalPackagePrice = servicesCart.reduce(\n      (total, service) => total + +service.packagePrice,\n      0\n    );\n    setPackagePrice(totalPackagePrice);\n  }, [servicesCart]);\n\n  const handleServiceBooking = () => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n    if (!formik.isValid && isLoggedIn) {\n      showSnackbar(\"Please fill all the required fields\", \"error\");\n    } else {\n      formik.handleSubmit();\n    }\n  };\n\n  const handleItemRemove = (subServiceId) => {\n    setSubServiceId(subServiceId);\n    setRemoveItem(true);\n  };\n\n  const confirmRemove = () => {\n    dispatch(removeFromServicesCart(subServiceId));\n    setRemoveItem(false);\n  };\n\n  return (\n    <div>\n      <Suspense>\n        <CustomLoader open={isLoading} />\n      </Suspense>\n      <div className=\"md:px-5 xl:!mx-5\">\n        <div className=\"flex flex-col xl:!flex-row gap-4 place-content-center px-2 py-6 md:!px-4 sm:py-10\">\n          <div className=\"flow-root border shadow rounded lg:!pl-1 self-start w-full xl:!w-3/5\">\n            <BookNowForm\n              isLoggedIn={isLoggedIn}\n              formik={formik}\n              timeSlots={timeSlots}\n            />\n          </div>\n          <div className=\"flex flex-col border shadow rounded p-4 xl:self-start font-poppins\">\n            <div className=\"text-2xl font-bold text-center\">Summary</div>\n            <FadedLineBreak />\n            {servicesCart.map((service, index) => (\n              <div key={index}>\n                <li className=\"flex flex-col sm:flex-row items-center justify-between gap-3 p-4 text-left\">\n                  <img\n                    src={service.selectedPackageImg}\n                    className=\"h-16 w-16 object-cover\"\n                    alt={service.packageName}\n                  />\n                  <div className=\"flex flex-col sm:flex-grow sm:pl-4 text-center md:!text-left\">\n                    <span className=\"text-base text-kashmirBlue\">\n                      {service.treatmentName}\n                    </span>\n                    <span className=\"font-medium text-coal\">\n                      {service.packageName}\n                    </span>\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <span className=\"text-base text-coal font-semibold\">\n                      {INRCurrency(service.packagePrice)}\n                    </span>\n                    <MdDeleteForever\n                      size=\"1.5rem\"\n                      className=\"text-gray-500 transition-all duration-200 ease-in-out focus:shadow hover:text-red-600 cursor-pointer\"\n                      onClick={() => handleItemRemove(service.subServiceId)}\n                    />\n                  </div>\n                </li>\n                <hr />\n              </div>\n            ))}\n            <div className=\"px-4 py-2\">\n              <div className=\"flex justify-between py-2 text-lg text-coal\">\n                <span>Total Package Price:</span>\n                <span>{INRCurrency(packagePrice)}</span>\n              </div>\n              <div className=\"flex justify-between font-semibold py-2 text-lg text-coal\">\n                <span>Amount Payable:</span>\n                <span>{INRCurrency(packagePrice / 2)}</span>\n              </div>\n            </div>\n            <small className=\"text-sm mt-4 text-Green\">\n              Note: You will have to pay <strong>50%</strong> at the time of\n              booking and the rest 50% amount post service\n            </small>\n            <div className=\"mt-6 flex justify-end mb-5\">\n              <CustomButton2\n                buttonText=\"Book Now\"\n                faIcon={\n                  <MdOutlineShoppingCartCheckout\n                    size=\"1.5rem\"\n                    className=\"ml-2 group-hover:scale-110 group-hover:!ml-5\"\n                  />\n                }\n                buttonClass=\"!w-96 !justify-end !text-xl\"\n                handleSubmit={handleServiceBooking}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {removeItem && (\n        <ConfirmationModal\n          isEmptyCart={false}\n          removeMessage=\"Are you sure you want to remove this service from the cart?\"\n          handleCancel={() => setRemoveItem(false)}\n          confirmRemove={confirmRemove}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default BookNowDetails;\n","import { AnimatePresence } from \"framer-motion\";\nimport { motion } from \"framer-motion\";\nimport Resources from \"../../../config/Resources\";\n\nfunction ConfirmationModal({\n  removeMessage,\n  handleCancel,\n  confirmRemove,\n  isEmptyCart,\n}) {\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"bg-slate-900/20 backdrop-blur p-4 fixed inset-0 z-50 md:grid place-items-center place-content-center overflow-scroll\"\n      >\n        <motion.div\n          initial={{ scale: 0 }}\n          animate={{ scale: 1 }}\n          exit={{ scale: 0 }}\n          transition={{ duration: 0.3 }}\n          className=\"bg-white p-8 rounded-lg w-full max-w-lg\"\n        >\n          <div className=\"flex justify-center mb-4\">\n            <img\n              src={Resources.images.Common.removeItem}\n              className=\"h-16 mb-3\"\n            />\n          </div>\n          <h3 className=\"font-bold text-lg mb-4 text-center text-coal\">\n            {removeMessage}\n          </h3>\n          <div className=\"flex flex-col md:!flex-row justify-center gap-4 mt-4\">\n            <button\n              onClick={handleCancel}\n              className=\"bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={confirmRemove}\n              className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700\"\n            >\n              {isEmptyCart ? \"Empty\" : \"Remove\"}\n            </button>\n          </div>\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n\nexport default ConfirmationModal;\n","import API_URLS from \"../../config/API_URLS\";\nimport { axiosInstanceLogin } from \"../../utils/Axios\";\n\nconst getServiceCart = async ({ userId }) => {\n  try {\n    const data = await axiosInstanceLogin.get(\n      `${API_URLS.Booking.getCartDetails}${userId}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw new Error();\n  }\n};\n\nconst addServiceToCart = async ({\n  userId,\n  serviceId,\n  subServiceId,\n  quantity = 1,\n}) => {\n  const reqBody = { userId, serviceId, subServiceId, quantity };\n\n  try {\n    const data = await axiosInstanceLogin.post(\n      API_URLS.Booking.addServiceToCart,\n      reqBody\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw new Error();\n  }\n};\n\nconst updateServiceToCart = async ({\n  userId,\n  serviceId,\n  subServiceId,\n  quantity,\n}) => {\n  const reqBody = { userId, serviceId, subServiceId, quantity };\n\n  try {\n    const data = await axiosInstanceLogin.post(\n      API_URLS.Booking.updateServiceInCart,\n      reqBody\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw new Error();\n  }\n};\n\nconst removeServiceFromCart = async ({ subServiceId }) => {\n  try {\n    const data = await axiosInstanceLogin.delete(\n      `${API_URLS.Booking.removeServiceFromCart}${subServiceId}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw new Error();\n  }\n};\n\nconst emptyCart = async ({ userId }) => {\n  try {\n    const data = await axiosInstanceLogin.delete(\n      `${API_URLS.Booking.clearCart}${userId}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw new Error();\n  }\n};\n\nconst requestBooking = async ({ serviceId, subServiceId, date }) => {\n  const reqBody = {\n    serviceId,\n    subServiceId,\n    date,\n  };\n\n  try {\n    const data = await axiosInstanceLogin.post(\n      API_URLS.Booking.reqBooking,\n      reqBody\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw new Error();\n  }\n};\n\nconst createNewBooking = async ({\n  userId,\n  serviceId,\n  name,\n  email,\n  mobile,\n  address,\n  treatmentDate,\n  timeSlot,\n  pinCode,\n  treatment,\n  laserOption,\n}) => {\n  const reqBody = {\n    userId,\n    serviceId,\n    name,\n    email,\n    mobile,\n    address,\n    treatmentDate,\n    timeSlot,\n    pinCode,\n    treatment,\n    laserOption,\n  };\n  try {\n    const data = await axiosInstanceLogin.post(\n      API_URLS.Booking.createBooking,\n      reqBody\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw new Error();\n  }\n};\n\nexport {\n  requestBooking,\n  createNewBooking,\n  addServiceToCart,\n  updateServiceToCart,\n  removeServiceFromCart,\n  emptyCart,\n  getServiceCart,\n};\n","import { Button } from \"react-bootstrap\";\n\nfunction CustomButton2({\n  buttonText = \"Book Now\",\n  handleSubmit,\n  faIcon,\n  buttonClass,\n}) {\n  return (\n    <Button\n      variant=\"contained\"\n      className={`!flex !items-center !justify-center gap-2 mt-4 w-full !bg-skyn !text-white py-2 px-4 rounded-md hover:bg-skyn-dark focus:outline-none focus:ring-2 focus:ring-skyn transition-all !shadow-[3px_3px_0px_black] hover:!shadow-none hover:!translate-x-[3px] hover:!translate-y-[3px] cursor-pointer ${buttonClass}`}\n      onClick={() => handleSubmit()}\n    >\n      {faIcon && faIcon} {buttonText}\n    </Button>\n  );\n}\n\nexport default CustomButton2;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useMediaQuery } from \"@mui/material\";\n\nconst DrawCircleText = ({\n  headerText,\n  serviceName,\n  buttonText,\n  link,\n  subText,\n}) => {\n  const isSmallerDevice = useMediaQuery(\"(max-width: 393px)\")\n  // bg-gradient-to-br from-[#313440] to-[#4F585A]\n  // bg-gradient-to-b from-[#313440] to-[#1F3A3B]\n  // bg-gradient-to-b from-[#313440] to-[#3C3F52]\n  // bg-gradient-to-r from-[#313440] to-[#0A4C4F]\n  // bg-gradient-to-r from-[#313440] to-[#ee6503]\n  // bg-gradient-to-r from-[#313440] to-[#103d40]\n  return (\n    <motion.div\n      viewport={{ once: false }}\n      className=\"grid place-content-center bg-gradient-to-r from-[#313440] to-[#1F3A3B] px-4 py-24 text-yellow-50\"\n    >\n      <h1 className=\"max-w-2xl text-center text-5xl leading-snug\">\n        <span className={`relative ${isSmallerDevice ? \"flex text-center\" : \"\"}`}>\n          {headerText}\n          <svg\n            viewBox=\"0 0 286 73\"\n            fill=\"none\"\n            className={`absolute -left-2 bottom-0 ${isSmallerDevice ? \"\" : \"translate-y-1\"}`}\n          >\n            <motion.path\n              initial={{ pathLength: 0 }}\n              whileInView={{ pathLength: 1 }}\n              transition={{\n                duration: 1.25,\n                ease: \"easeInOut\",\n              }}\n              d=\"M142.293 1C106.854 16.8908 6.08202 7.17705 1.23654 43.3756C-2.10604 68.3466 29.5633 73.2652 122.688 71.7518C215.814 70.2384 316.298 70.689 275.761 38.0785C230.14 1.37835 97.0503 24.4575 52.9384 1\"\n              stroke=\"#FACC15\"\n              strokeWidth=\"3\"\n            />\n          </svg>\n        </span>{\" \"}\n        {serviceName}\n      </h1>\n      <p className=\"font-bold font-poppins text-center mt-4 mb-4\">\n        100% Satisfaction Guaranteed\n      </p>\n      {subText && (\n        <span className=\"text-4xl font-bold font-poppins text-center\">\n          {subText}\n        </span>\n      )}\n      {buttonText && (\n        <div className=\"flex items-center justify-center gap-3 mt-4\">\n          <Link\n            to={link}\n            className=\"w-fit bg-neutral-200 px-4 py-2 font-semibold text-neutral-700 transition-colors hover:bg-neutral-50 no-underline\"\n          >\n            {buttonText}\n          </Link>\n        </div>\n      )}\n    </motion.div>\n  );\n};\n\nexport default DrawCircleText;\n","import React from \"react\";\n\nconst FadedLineBreak = () => {\n  const hrStyle = {\n    borderWidth: \"0 0 4px\",\n    borderImage:\n      \"linear-gradient(90deg, rgba(238, 101, 3, 0), rgba(238, 101, 3, 1) 50%, rgba(238, 101, 3, 0) 100%) 0 0 100%\",\n    borderStyle: \"solid\",\n    width: \"100%\",\n  };\n\n  return (\n    <div className=\"my-6\">\n      <hr style={hrStyle} />\n    </div>\n  );\n};\n\nexport default FadedLineBreak;\n"],"names":["CustomTextField","lazy","CustomDropdown","CustomDatePicker","_ref","_formik$values","_formik$values2","_formik$errors","_formik$touched","isLoggedIn","formik","timeSlots","navigate","useNavigate","userProfile","useSelector","state","userAddressOptions","setUserAddressOptions","useState","useEffect","userAddresses","addresses","map","address","label","concat","fullName","addressLine1","addressLine2","city","pinCode","phone","value","id","_jsx","_Fragment","children","className","_jsxs","FadedLineBreak","onClick","Suspense","fallback","textClassOverride","placeholderClasses","placeholder","requiredStar","labelToShow","name","textFieldColorClass","inputClassName","fieldWidth","values","onChange","handleChange","handleBlur","error","errors","touched","regex","maxLength","email","numeric","mobile","classes","showIconOutline","options","errorMessage","getIn","Link","to","textClassToOverride","disablePast","setFieldValue","setFieldTouched","treatmentDate","htmlFor","slot","index","type","timeSlot","CustomLoader","servicesCart","services","dispatch","useDispatch","showSnackbar","useAppSnackbar","packagePrice","setPackagePrice","removeItem","setRemoveItem","subServiceId","setSubServiceId","setTimeSlots","initialValues","setInitialValues","storedTimeSlots","sessionStorage","getItem","JSON","parse","mutate","createBooking","isLoading","useMutation","createNewBooking","onSuccess","res","isError","message","onError","useFormik","enableReinitialize","validateOnMount","validateOnChange","validationSchema","getBookNowFormValidation","onSubmit","servicesBooked","Array","isArray","_ref2","treatmentName","packageName","serviceId","featureName","selectedPackageImg","strikeOutPrice","reqBody","userInfo","console","log","totalPackagePrice","reduce","total","service","open","BookNowForm","src","alt","INRCurrency","MdDeleteForever","size","handleItemRemove","CustomButton2","buttonText","faIcon","MdOutlineShoppingCartCheckout","buttonClass","handleSubmit","handleServiceBooking","isValid","ConfirmationModal","isEmptyCart","removeMessage","handleCancel","confirmRemove","removeFromServicesCart","AnimatePresence","motion","div","initial","opacity","animate","exit","transition","duration","scale","Resources","images","Common","removeServiceFromCart","async","_ref4","axiosInstanceLogin","delete","API_URLS","Booking","Error","emptyCart","userId","_ref5","clearCart","requestBooking","date","_ref6","post","reqBooking","treatment","laserOption","_ref7","Button","variant","headerText","serviceName","link","subText","isSmallerDevice","useMediaQuery","viewport","once","viewBox","fill","path","pathLength","whileInView","ease","d","stroke","strokeWidth","style","borderWidth","borderImage","borderStyle","width"],"sourceRoot":""}