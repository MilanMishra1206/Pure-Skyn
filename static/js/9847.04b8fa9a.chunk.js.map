{"version":3,"file":"static/js/9847.04b8fa9a.chunk.js","mappings":"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","sources":["components/BookNow/BookNowDetails/BookNowForm/index.jsx","services/Booking/index.js","components/BookNow/BookNowDetails/BookingSuccessModal/index.jsx","components/BookNow/BookNowDetails/index.jsx","components/ProductsCart/ConfirmationModal/index.jsx","config/API_URLS/index.js","helpers/Login/index.jsx","helpers/Regex/index.jsx","redux/Actions/index.js","shared/CustomButton2/index.jsx","shared/CustomHrTag/index.jsx","utils/Axios/index.jsx"],"sourcesContent":["import { lazy, Suspense, useEffect, useState } from \"react\";\nimport { getIn } from \"formik\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport FadedLineBreak from \"../../../../shared/CustomHrTag\";\nimport { regex } from \"../../../../helpers/Regex\";\nimport { useSelector } from \"react-redux\";\n\nconst CustomTextField = lazy(\n  () => import(\"../../../../shared/CustomTextField\")\n);\nconst CustomDropdown = lazy(() => import(\"../../../../shared/CustomDropdown\"));\nconst CustomDatePicker = lazy(\n  () => import(\"../../../../shared/CustomDatePicker\")\n);\n\nfunction BookNowForm({ isLoggedIn, formik, timeSlots }) {\n  const navigate = useNavigate();\n  const userProfile = useSelector((state) => state.userProfile.userProfile);\n\n  const [userAddressOptions, setUserAddressOptions] = useState([]);\n\n  useEffect(() => {\n    const userAddresses =\n      userProfile?.addresses?.map((address) => {\n        const addressValue = `${address.fullName}, ${address.addressLine1}, ${address.addressLine2}, \n          ${address.city}, ${address.state} - ${address.pinCode}, ${address.phone}`;\n        return {\n          label: addressValue,\n          value: address.id,\n        };\n      }) || [];\n\n    setUserAddressOptions(userAddresses);\n  }, [userProfile]);\n\n  useEffect(() => {\n    const selectedCity =\n      userProfile?.addresses?.find(\n        (address) => address.id === formik.values.address\n      )?.city || \"\";\n\n    formik.setFieldValue(\"city\", selectedCity);\n  }, [formik.values.address, userProfile]);\n\n  return (\n    <>\n      <form className=\"w-full\">\n        <div className=\"p-4\">\n          <div className=\"text-2xl font-poppins text-center font-extrabold\">\n            Please Share Booking Details\n          </div>\n          <FadedLineBreak />\n          <div className=\"text-left text-lg md:p-5 ml-2 mb-4 md:!mb-0\">\n            {!isLoggedIn && (\n              <p className=\"text-sm font-bold\">\n                <button\n                  className=\"text-[#175EC3] hover:opacity-80\"\n                  onClick={() => navigate(\"/login\")}\n                >\n                  Sign-In\n                </button>{\" \"}\n                before proceeding for booking\n              </p>\n            )}\n          </div>\n          <div className=\"grid md:grid-cols-2 gap-4 md:p-5\">\n            <Suspense fallback={<div />}>\n              <CustomTextField\n                textClassOverride=\"!text-kashmirBlue\"\n                placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                className=\"h-12 rounded-md !bg-transparent\"\n                placeholder=\"Enter\"\n                requiredStar\n                labelToShow=\"Name\"\n                name=\"name\"\n                textFieldColorClass=\"shadow-insetLight\"\n                inputClassName=\"!bg-transparent\"\n                fieldWidth=\"w-full !mb-4\"\n                value={formik.values?.name}\n                onChange={formik.handleChange}\n                handleBlur={formik.handleBlur}\n                error={formik.errors.name}\n                touched={formik.touched.name}\n              />\n            </Suspense>\n            <Suspense fallback={<div />}>\n              <CustomTextField\n                textClassOverride=\"!text-kashmirBlue\"\n                placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                className=\"h-12 rounded-md !bg-transparent\"\n                placeholder=\"Enter\"\n                requiredStar\n                regex={/^[^!#$%^&*()=+{}[\\]:;<>,?/~`|\"\\\\ ]*$/}\n                labelToShow=\"Email ID\"\n                name=\"email\"\n                textFieldColorClass=\"shadow-insetLight\"\n                inputClassName=\"!bg-transparent\"\n                fieldWidth=\"!mb-4\"\n                maxLength={50}\n                value={formik.values?.email}\n                onChange={formik.handleChange}\n                handleBlur={formik.handleBlur}\n                error={formik.errors?.email}\n                touched={formik.touched?.email}\n              />\n            </Suspense>\n            <Suspense fallback={<div />}>\n              <CustomTextField\n                textClassOverride=\"!text-kashmirBlue\"\n                placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                className=\"h-12 rounded-md !bg-transparent\"\n                placeholder=\"Enter\"\n                requiredStar\n                labelToShow=\"Mobile Number\"\n                name=\"mobile\"\n                maxLength={10}\n                regex={regex.numeric}\n                textFieldColorClass=\"shadow-insetLight\"\n                inputClassName=\"!bg-transparent\"\n                fieldWidth=\"!mb-4\"\n                value={formik.values.mobile}\n                onChange={formik.handleChange}\n                handleBlur={formik.handleBlur}\n                error={formik.errors.mobile}\n                touched={formik.touched.mobile}\n              />\n            </Suspense>\n            <Suspense fallback={<div />}>\n              <div>\n                <CustomDropdown\n                  textClassOverride=\"!text-kashmirBlue\"\n                  classes=\"!rounded-md !mb-4\"\n                  requiredStar\n                  labelToShow=\"Select Address\"\n                  name=\"address\"\n                  showIconOutline\n                  options={userAddressOptions}\n                  value={formik.values.address}\n                  handleBlur={formik.handleBlur}\n                  handleChange={formik.handleChange}\n                  errorMessage={getIn(formik.errors, \"address\")}\n                  error={getIn(formik.errors, \"address\")}\n                  touched={getIn(formik.touched, \"address\")}\n                />\n                <div>\n                  <Link\n                    className=\"text-sm underline text-skyn hover:opacity-80\"\n                    to=\"/user-profile#Address\"\n                  >\n                    Add Address\n                  </Link>\n                </div>\n              </div>\n            </Suspense>\n            <Suspense fallback={<div />}>\n              <CustomTextField\n                textClassOverride=\"!text-kashmirBlue\"\n                placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                disabledField\n                className=\"h-12 rounded-md !bg-transparent\"\n                requiredStar\n                labelToShow=\"City\"\n                name=\"city\"\n                textFieldColorClass=\"shadow-insetLight\"\n                inputClassName=\"!bg-transparent\"\n                fieldWidth=\"!mb-4\"\n                value={formik.values.city}\n                onChange={formik.handleChange}\n                handleBlur={formik.handleBlur}\n                error={formik.errors.city}\n                touched={formik.touched.city}\n              />\n            </Suspense>\n            <div className=\"mb-4\">\n              <Suspense fallback={<div />}>\n                <CustomDatePicker\n                  label=\"Treatment Date\"\n                  name=\"treatmentDate\"\n                  textClassToOverride=\"!text-kashmirBlue\"\n                  requiredStar\n                  disablePast\n                  className=\"w-full rounded-md !bg-transparent shadow-insetLight\"\n                  fieldWidth=\"!w-full\"\n                  setFieldValue={formik.setFieldValue}\n                  setFieldTouched={formik.setFieldTouched}\n                  value={formik.values.treatmentDate}\n                  error={formik.errors.treatmentDate}\n                  touched={formik.touched.treatmentDate}\n                  inputClassName=\"!text-kashmirBlue !font-poppins\"\n                  onChange={formik.handleChange}\n                  handleBlur={formik.handleBlur}\n                />\n              </Suspense>\n            </div>\n            <div className=\"mb-4\">\n              <label\n                htmlFor=\"timeSlot\"\n                className=\"text-sm font-medium pb-1 !text-kashmirBlue\"\n              >\n                Select Appointment Time{\" \"}\n                <span className=\"text-bitterSweet\">*</span>\n              </label>\n              <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                {timeSlots.map((slot, index) => (\n                  <button\n                    key={index}\n                    type=\"button\"\n                    onClick={() => formik.setFieldValue(\"timeSlot\", slot)}\n                    className={`p-2 rounded text-sm font-bold transition-all shadow-md ${\n                      formik.values.timeSlot === slot\n                        ? \"bg-skyn text-white border-skyn\"\n                        : \"bg-white text-gray-700 hover:!bg-gray-100\"\n                    }`}\n                  >\n                    {slot}\n                  </button>\n                ))}\n              </div>\n              {formik.errors.timeSlot && formik.touched.timeSlot && (\n                <p className=\"mt-1 ml-1 text-xs text-bitterSweet\">\n                  {formik.errors.timeSlot}*\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default BookNowForm;\n","import API_URLS from \"../../config/API_URLS\";\nimport { axiosInstanceLogin } from \"../../utils/Axios\";\n\nconst getServiceCart = async ({ userId }) => {\n  try {\n    const data = await axiosInstanceLogin.get(\n      `${API_URLS.Booking.getCartDetails}${userId}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw new Error();\n  }\n};\n\nconst createNewBooking = async ({ reqBody }) => {\n  try {\n    const data = await axiosInstanceLogin.post(\n      API_URLS.Booking.createBooking,\n      reqBody\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw new Error();\n  }\n};\n\nexport { createNewBooking, getServiceCart };\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n\nfunction BookingSuccessModal({ handlePrimaryButtonClick, bookingData }) {\n  if (!bookingData) return null;\n\n  const { bookingId, userInfo, servicesBooked, payment } = bookingData;\n\n  const formatDate = (dateStr) => new Date(dateStr).toLocaleDateString();\n  const formatTime = (timeStr) =>\n    new Date(timeStr).toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"bg-slate-900/20 backdrop-blur fixed inset-0 z-50 flex items-center justify-center px-4 font-poppins\"\n      >\n        <motion.div\n          initial={{ scale: 0.9 }}\n          animate={{ scale: 1 }}\n          exit={{ scale: 0.9 }}\n          transition={{ duration: 0.3 }}\n          className=\"bg-white rounded-lg w-full max-w-lg h-[90vh] flex flex-col\"\n        >\n          <div className=\"overflow-y-auto p-6\">\n            <div className=\"flex flex-col items-center mb-6\">\n              <FaCheckCircle className=\"text-green-500 text-6xl mb-4\" />\n              <h1 className=\"text-2xl font-semibold text-gray-800 mb-2\">\n                Booking Confirmed!\n              </h1>\n              <p className=\"text-gray-600 text-sm text-center\">\n                Your appointment has been successfully scheduled.\n              </p>\n            </div>\n            <div className=\"flex gap-2 items-center bg-gray-50 rounded-lg shadow-md p-4 mb-6\">\n              <p className=\"text-sm text-gray-600\">Booking ID</p>\n              <p className=\"text-lg font-bold text-denim\">{bookingId}</p>\n            </div>\n            <div className=\"bg-gray-50 rounded-lg shadow-md p-4 mb-6 text-sm space-y-2\">\n              <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\n                User Details\n              </h2>\n              <p>\n                <strong>Name:</strong> {userInfo?.name}\n              </p>\n              <p>\n                <strong>Email:</strong> {userInfo?.email}\n              </p>\n              <p>\n                <strong>Mobile:</strong> {userInfo?.mobile}\n              </p>\n              <p>\n                <strong>Address:</strong> {userInfo?.address}, {userInfo?.city}\n              </p>\n            </div>\n            <div className=\"bg-gray-50 rounded-lg shadow-md p-4 mb-6 text-sm\">\n              <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\n                Services Booked\n              </h2>\n              {servicesBooked?.map((service, index) => (\n                <div key={index} className=\"mb-4 border-b pb-4 last:border-b-0 space-y-2 \">\n                  <p>\n                    <strong>Service ID:</strong> {service.subServiceId}\n                  </p>\n                  <p>\n                    <strong>Date:</strong> {formatDate(service.date)}\n                  </p>\n                  <p>\n                    <strong>Time:</strong> {formatTime(service.time)}\n                  </p>\n\n                  {service.sessions?.length > 0 && (\n                    <div className=\"mt-2\">\n                      <p className=\"font-bold text-sm text-gray-700 mb-1\">\n                        Sessions:\n                      </p>\n                      {service.sessions.map((session, i) => (\n                        <div key={i} className=\"text-sm text-gray-600 ml-4\">\n                          <p>\n                            • {formatDate(session.date)} at{\" \"}\n                            {formatTime(session.time)}\n                          </p>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n            {payment && (\n              <div className=\"bg-gray-50 rounded-lg shadow-md p-4 mb-6\">\n                <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\n                  Payment Details\n                </h2>\n                <p>\n                  <strong>Amount:</strong> ₹{payment.amount}\n                </p>\n                <p>\n                  <strong>Transaction ID:</strong> {payment.transactionId}\n                </p>\n                <p>\n                  <strong>Mode:</strong> {payment.paymentMode}\n                </p>\n                <p>\n                  <strong>Date:</strong> {formatDate(payment.paymentDate)}\n                </p>\n                <p>\n                  <strong>Time:</strong> {formatTime(payment.paymentTime)}\n                </p>\n              </div>\n            )}\n          </div>\n\n          {/* Footer Button */}\n          <div className=\"border-t p-4 flex justify-center\">\n            <button\n              onClick={handlePrimaryButtonClick}\n              className=\"text-white px-4 py-2 rounded-md bg-denim hover:opacity-90\"\n            >\n              Done\n            </button>\n          </div>\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n\nexport default BookingSuccessModal;\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { MdDeleteForever, MdOutlineShoppingCartCheckout } from \"react-icons/md\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { useMutation } from \"react-query\";\n\nimport CustomButton2 from \"../../../shared/CustomButton2\";\nimport BookNowForm from \"./BookNowForm\";\nimport { removeFromServicesCart } from \"../../../redux/Actions\";\nimport ConfirmationModal from \"../../ProductsCart/ConfirmationModal\";\nimport FadedLineBreak from \"../../../shared/CustomHrTag\";\nimport { getBookNowFormValidation } from \"../../../helpers/Login\";\nimport { createNewBooking } from \"../../../services/Booking\";\nimport { useAppSnackbar } from \"../../../config/Context/SnackbarContext\";\nimport { INRCurrency } from \"../../../helpers/Regex\";\nimport Resources from \"../../../config/Resources\";\nimport BookingSuccessModal from \"./BookingSuccessModal\";\n\nconst CustomLoader = lazy(() => import(\"../../../shared/CustomLoader\"));\nconst CustomPackageTermsAndConditions = lazy(\n  () => import(\"../../../shared/CustomPackageTermsAndConditions\")\n);\n\nconst BookNowDetails = ({ isLoggedIn }) => {\n  const userProfile = useSelector((state) => state.userProfile.userProfile);\n  const servicesCart = useSelector((state) => state.servicesCart.services);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const showSnackbar = useAppSnackbar();\n  const [packagePrice, setPackagePrice] = useState(0);\n  const [removeItem, setRemoveItem] = useState(false);\n  const [askForLogin, setAskForLogin] = useState(false);\n  const [subServiceId, setSubServiceId] = useState(\"\");\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [isOpenTandCModal, setIsOpenTandCModal] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  const [showBookingSuccessModal, setShowBookingSuccessModal] = useState(false);\n  const [successBookingContent, setSuccessBookingContent] = useState({});\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    email: \"\",\n    mobile: \"\",\n    address: \"\",\n    treatmentDate: \"\",\n    timeSlot: \"\",\n    city: \"\",\n  });\n\n  useEffect(() => {\n    const storedTimeSlots = sessionStorage.getItem(\"availableTimeSlots\");\n    setTimeSlots(\n      storedTimeSlots\n        ? JSON.parse(storedTimeSlots)\n        : [\"10:00 AM\", \"12:00 PM\", \"2:00 PM\", \"4:00 PM\"]\n    );\n  }, [sessionStorage.getItem(\"availableTimeSlots\")]);\n\n  useEffect(() => {\n    isLoggedIn &&\n      setInitialValues({\n        name: userProfile?.name || \"\",\n        email: userProfile?.email || \"\",\n        mobile: userProfile?.phone || \"\",\n        address: \"\",\n        city: \"\",\n        treatmentDate: \"\",\n        timeSlot: \"\",\n      });\n  }, [isLoggedIn, userProfile]);\n\n  const { mutate: createBooking, isLoading } = useMutation(createNewBooking, {\n    onSuccess(res) {\n      if (res?.status !== \"ERROR\") {\n        setShowBookingSuccessModal(true);\n        setSuccessBookingContent(res?.data);\n        showSnackbar(res?.message, \"success\");\n      } else {\n        showSnackbar(res?.message, \"error\");\n      }\n    },\n    onError(error) {\n      showSnackbar(error?.message, \"error\");\n    },\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    validateOnMount: true,\n    validateOnChange: true,\n    initialValues,\n    validationSchema: getBookNowFormValidation,\n    onSubmit: (values) => {\n      const { name, email, address, city, mobile, timeSlot, treatmentDate } =\n        values;\n      const [day, month, year] = treatmentDate.split(\"/\");\n      const formattedDate = `${year}-${month}-${day}`;\n      const formattedTimeISO = new Date(\n        `${formattedDate} ${timeSlot}`\n      ).toISOString();\n\n      const servicesBooked = Array.isArray(servicesCart)\n        ? servicesCart.map(({ subServiceId }) => {\n            const date = formattedDate;\n            const time = formattedTimeISO;\n            return {\n              subServiceId,\n              date,\n              time,\n              sessions: [\n                {\n                  id: subServiceId,\n                  date,\n                  time,\n                },\n              ],\n            };\n          })\n        : [];\n      // const servicesBooked = Array.isArray(servicesCart)\n      //   ? servicesCart.map(\n      //       ({\n      //         treatmentName = \"\",\n      //         packageName = \"\",\n      //         serviceId = \"\",\n      //         subServiceId = \"\",\n      //         packagePrice = 0,\n      //         featureName = \"\",\n      //         selectedPackageImg = \"\",\n      //         strikeOutPrice = null,\n      //       }) => ({\n      //         treatmentName,\n      //         packageName,\n      //         serviceId,\n      //         subServiceId,\n      //         packagePrice,\n      //         featureName,\n      //         selectedPackageImg,\n      //         strikeOutPrice,\n      //       })\n      //     )\n      //   : [];\n      const beneficiary = {\n        name,\n        email,\n        mobile,\n        address,\n        city,\n      };\n      const reqBody = {\n        userId: userProfile.userId,\n        beneficiary,\n        servicesBooked,\n        paymentId: \"P123\",\n      };\n      createBooking({\n        reqBody,\n      });\n    },\n  });\n\n  useEffect(() => {\n    const totalPackagePrice = servicesCart.reduce(\n      (total, service) => total + +service.packagePrice,\n      0\n    );\n    setPackagePrice(totalPackagePrice);\n  }, [servicesCart]);\n\n  const handleServiceBooking = () => {\n    if (!isLoggedIn) {\n      setAskForLogin(true);\n    }\n    if (!formik.isValid && isLoggedIn) {\n      showSnackbar(\"Please fill all the required fields\", \"error\");\n    } else {\n      formik.handleSubmit();\n    }\n  };\n\n  const handleItemRemove = (subServiceId) => {\n    setSubServiceId(subServiceId);\n    setRemoveItem(true);\n  };\n\n  const confirmRemove = () => {\n    dispatch(removeFromServicesCart(subServiceId));\n    setRemoveItem(false);\n  };\n\n  return (\n    <div>\n      <Suspense>\n        <CustomLoader open={isLoading} />\n      </Suspense>\n      <div className=\"md:px-5 xl:!mx-5\">\n        <div className=\"flex flex-col xl:!flex-row gap-4 place-content-center px-2 py-6 md:!px-4 sm:py-10\">\n          <div className=\"flow-root border shadow rounded lg:!pl-1 self-start w-full xl:!w-3/5\">\n            <BookNowForm\n              isLoggedIn={isLoggedIn}\n              formik={formik}\n              timeSlots={timeSlots}\n            />\n          </div>\n          <div className=\"flex flex-col border shadow rounded p-4 xl:self-start font-poppins\">\n            <div className=\"text-2xl font-bold text-center\">Summary</div>\n            <FadedLineBreak />\n            {servicesCart.map((service, index) => (\n              <div key={index}>\n                <li className=\"flex flex-col sm:flex-row items-center justify-between gap-3 p-4 text-left\">\n                  <img\n                    src={service.selectedPackageImg}\n                    className=\"h-16 w-16 object-cover\"\n                    alt={service.packageName}\n                  />\n                  <div className=\"flex flex-col sm:flex-grow sm:pl-4 text-center md:!text-left\">\n                    <span className=\"text-base text-kashmirBlue\">\n                      {service.treatmentName}\n                    </span>\n                    <span className=\"font-medium text-coal\">\n                      {service.packageName}\n                    </span>\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <span className=\"text-base text-coal font-semibold\">\n                      {INRCurrency(service.packagePrice)}\n                    </span>\n                    <MdDeleteForever\n                      size=\"1.5rem\"\n                      className=\"text-gray-500 transition-all duration-200 ease-in-out focus:shadow hover:text-red-600 cursor-pointer\"\n                      onClick={() => handleItemRemove(service.subServiceId)}\n                    />\n                  </div>\n                </li>\n                <hr />\n              </div>\n            ))}\n            <div className=\"px-4 py-2\">\n              <div className=\"flex justify-between py-2 text-lg text-coal\">\n                <span>Total Package Price:</span>\n                <span>{INRCurrency(packagePrice)}</span>\n              </div>\n              <div className=\"flex justify-between font-semibold py-2 text-lg text-coal\">\n                <span>Amount Payable:</span>\n                <span>{INRCurrency(packagePrice / 2)}</span>\n              </div>\n            </div>\n            <small className=\"text-sm mt-4 text-Green\">\n              Note: You will have to pay <strong>50%</strong> at the time of\n              booking and the rest 50% amount post service\n            </small>\n            <div className=\"flex items-center gap-2 mt-4\">\n              <input\n                type=\"checkbox\"\n                id=\"tandc\"\n                checked={isChecked}\n                onChange={(e) => setIsChecked(e.target.checked)}\n                className=\"accent-skyn cursor-pointer\"\n              />\n              <label htmlFor=\"tandc\">\n                I Agree to the{\" \"}\n                <button\n                  type=\"button\"\n                  className=\"text-bitterSweet hover:underline bg-white outline-none border-none\"\n                  onClick={() => setIsOpenTandCModal(true)}\n                >\n                  Terms & Conditions*\n                </button>\n              </label>\n            </div>\n            <div className=\"mt-6 flex justify-end mb-5\">\n              <CustomButton2\n                buttonText=\"Book Now\"\n                faIcon={\n                  <MdOutlineShoppingCartCheckout\n                    size=\"1.5rem\"\n                    className=\"ml-2 group-hover:scale-110 group-hover:!ml-5\"\n                  />\n                }\n                buttonClass={`!w-96 !justify-end !text-xl ${!isChecked ? \"disabled\" : \"\"}`}\n                handleSubmit={handleServiceBooking}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {removeItem && (\n        <ConfirmationModal\n          title=\"Are you sure you want to remove this service from the cart?\"\n          handleCancel={() => setRemoveItem(false)}\n          handlePrimaryButtonClick={confirmRemove}\n          confirmButtonText=\"Remove\"\n        />\n      )}\n      {askForLogin && (\n        <ConfirmationModal\n          title=\"You have to login before booking our services!\"\n          handleCancel={() => setAskForLogin(false)}\n          handlePrimaryButtonClick={() => navigate(\"/login\")}\n          confirmButtonText=\"Login\"\n          confirmButtonColor=\"bg-skyn hover:!opacity-80\"\n          imageSrc={Resources.images.Common.Warning}\n        />\n      )}\n      {/* Booking Success Content Modal */}\n      {showBookingSuccessModal && (\n        <BookingSuccessModal\n          handlePrimaryButtonClick={() => setShowBookingSuccessModal(false)}\n          bookingData={successBookingContent}\n        />\n      )}\n      {/* Terms and Conditions Modal */}\n      <Suspense>\n        <CustomPackageTermsAndConditions\n          isOpenTandCModal={isOpenTandCModal}\n          setIsOpenTandCModal={setIsOpenTandCModal}\n          buttonText=\"I Agree\"\n        />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default BookNowDetails;\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport Resources from \"../../../config/Resources\";\n\nfunction ConfirmationModal({\n  title,\n  handleCancel,\n  handlePrimaryButtonClick,\n  confirmButtonText,\n  confirmButtonColor = \"bg-red-600 hover:bg-red-700\",\n  imageSrc = Resources.images.Common.removeItem,\n}) {\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"bg-slate-900/20 backdrop-blur p-4 fixed inset-0 z-50 md:grid place-items-center place-content-center overflow-scroll\"\n      >\n        <motion.div\n          initial={{ scale: 0 }}\n          animate={{ scale: 1 }}\n          exit={{ scale: 0 }}\n          transition={{ duration: 0.3 }}\n          className=\"bg-white p-8 rounded-lg w-full max-w-lg\"\n        >\n          <div className=\"flex justify-center mb-4\">\n            <img src={imageSrc} alt=\"Confirmation Icon\" className=\"h-16\" />\n          </div>\n          <h3 className=\"font-bold text-lg mb-4 text-center text-coal\">\n            {title}\n          </h3>\n          <div className=\"flex flex-col md:!flex-row justify-center gap-4 mt-6\">\n            <button\n              onClick={handleCancel}\n              className=\"bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handlePrimaryButtonClick}\n              className={`text-white px-4 py-2 rounded-md ${confirmButtonColor} `}\n            >\n              {confirmButtonText}\n            </button>\n          </div>\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n\nexport default ConfirmationModal;\n","const API_URLS = {\n  baseURL: \"https://skynapi.duckdns.org/api/v1\",\n  Admin: {\n    getAllUsers: \"users/all\",\n    availableTechnicians: \"admin/available-technicians\",\n  },\n  Auth: {\n    login: \"/auth/login\",\n    loginAdmin: \"/admin/login\",\n    registerUser: \"/admin/register\",\n    requestChangePassword: \"/auth/request-password-change?email=\",\n    changePassword: \"/auth/change-password\",\n  },\n  Booking: {\n    getCartDetails: \"/cart/\",\n    reqBooking: \"/booking/request\",\n    createBooking: \"/booking/create\",\n  },\n  Cart: {\n    saveServiceCart: \"/cart/add-update\",\n    getServiceCart: \"/cart/\",\n  },\n  Query: {\n    newQuery: \"/query/new\",\n    updateQueryStatus: \"/query/\",\n    getAllQuery: \"/query/all\",\n    getQueryWithFilter: \"/query/status/\",\n  },\n  Services: {\n    getAllServices: \"/services/all\",\n    createService: \"/services/create\",\n  },\n  Users: {\n    addAddress: \"/auth/user/add-address\",\n    getUserAddress: \"/users/address\",\n    updateUserDetails: \"/auth/update-user\",\n    updateUserAddress: \"/auth/update-address\",\n    deleteUserAddress: \"/auth/user/delete-address\",\n  },\n};\n\nexport default API_URLS;\n","import * as yup from \"yup\";\nimport { regex } from \"../Regex\";\nimport React from \"react\";\n\nconst loginInitialValues = {\n  email: \"\",\n  password: \"\",\n};\n\nconst getLoginValidation = () =>\n  yup.object().shape({\n    email: yup\n      .string()\n      .email(\"Please Enter Valid Email\")\n      .required(\"Email is required\"),\n    password: yup.string().required(\"Password is required\"),\n  });\n\nconst signUpInitialValue = {\n  name: \"\",\n  email: \"\",\n  phone: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst getSignUpValidation = () =>\n  yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    email: yup\n      .string()\n      .email(\"Please Enter Valid Email\")\n      .required(\"Email is required\"),\n    phone: yup\n      .string()\n      .required(\"Phone number is required\")\n      .matches(regex.mobileNumber, \"Enter Valid Phone Number\"),\n    password: yup.string().required(\"Password is required\"),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref(\"password\")], \"Password Must Match\")\n      .required(\"Confirm password is required\"),\n  });\n\nconst getTandCContent = () => (\n  <div className=\"text-kashmirBlue text-center text-sm p-2\">\n    <div className=\"mt-4\">\n      <div className=\"text-cello font-bold mt-1\">\n        1.1 Know Your Customer Guidelines\n      </div>\n      <div className=\"mt-2\">\n        <div className=\"text-kashmirBlue font-bold ml-2\">\n          1.1.1 KYC should be carried out for all customers. It is of two types\n          - Basic KYC and Enhanced KYC.{\" \"}\n        </div>\n        <div className=\"mt-1 ml-4\">\n          <div>\n            Basic KYC involves verification of identity and residence of\n            customers. It involves collection of identity proof, address proof\n            and latest photograph. Enhanced KYC involves in addition to basic\n            KYC, ascertainment of genuineness of source of funds by verification\n            of income document.\n          </div>\n          <div>\n            Where a customer is a juridical person, verification of identity is\n            required to be carried out on persons purporting to act and is\n            authorized to act on behalf of a customer. Special care has to be\n            exercised to ensure that contracts are not anonymous or under\n            fictitious names. No contract can be entered into with persons of\n            known criminal background or known to be engaged in money\n            laundering/ terrorist financing activities.\n          </div>\n          <div>\n            Remittances of premium by cash exceeding Rs.49,999/- will not be\n            accepted. Acceptance of Premium beyond Rs.49,999/- will be only\n            through cheques, demand drafts, credit card or any other banking\n            channels.\n          </div>\n          <div>\n            Insurance premium paid by persons other than the person insured\n            should be looked into to establish insurable interest\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst bookNowInitialValues = {\n  name: \"\",\n  email: \"\",\n  mobile: \"\",\n  city: \"\",\n  treatment: \"\",\n};\n\nconst getBookNowFormValidation = () =>\n  yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    email: yup\n      .string()\n      .email(\"Please Enter Valid Email\")\n      .required(\"Email is required\"),\n    mobile: yup\n      .string()\n      .matches(regex.mobileNumber, \"Please Enter Valid Mobile Number\")\n      .required(\"Mobile number is required\"),\n    address: yup.string().required(\"Address is required\"),\n    treatmentDate: yup.string().required(\"Date is required\"),\n    timeSlot: yup.string().required(\"Please select a time slot\"),\n    city: yup.string().required(\"City is required\"),\n  });\n\nconst getAddReviewValidation = () =>\n  yup.object().shape({\n    fullName: yup.string().required(\"Full name is required\"),\n    email: yup\n      .string()\n      .email(\"Please Enter Valid Email\")\n      .required(\"Email is required\"),\n    rating: yup.number().required(\"Rating is required\"),\n    description: yup\n      .string()\n      .required(\"Description is required\")\n      .min(10, \"Description must be at least 10 characters\")\n      .max(250, \"Description cannot exceed 250 characters\")\n      .test(\n        \"word-count\",\n        \"Description must be between 2 and 50 words\",\n        (value) => {\n          const wordCount = value ? value.trim().split(/\\s+/).length : 0;\n          return wordCount >= 2 && wordCount <= 50;\n        }\n      ),\n  });\n\nconst getQueryValidation = () =>\n  yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    phone: yup\n      .string()\n      .matches(regex.mobileNumber, \"Please Enter Valid Mobile Number\")\n      .required(\"Mobile Number is required\"),\n    serviceId: yup.string().required(\"Select Service Option\"),\n  });\n\nexport {\n  loginInitialValues,\n  getLoginValidation,\n  signUpInitialValue,\n  getSignUpValidation,\n  getTandCContent,\n  bookNowInitialValues,\n  getBookNowFormValidation,\n  getAddReviewValidation,\n  getQueryValidation,\n};\n","export const regex = {\n  numeric: /^[0-9]*$/,\n  alphabet: /^[a-zA-Z.]+$/,\n  alphabetWithSpace: /^[a-zA-Z ]*$/,\n  alphabetNumberWithSpace: /^[a-zA-Z0-9\\s&-. ]*$/,\n  stringWithSpaces: /^[a-zA-Z0-9\\s!@#$%^&*()-_=+[\\]{}|;:'\",.<>/?]*$/,\n  mobileNumber: /^[56789]\\d{9}$/,\n  noRepeatMobileNumber: /^(?!.*(\\d)\\1{4})[56789]\\d{9}$/,\n  stringWithoutSpecialCharacters: /^[^~^|`?+\\-=<>@$%*]+$/,\n  emailValidationRegex: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n  alphaNumeric: /^[a-zA-Z0-9\\s]*$/,\n};\n\nexport function INRCurrency(price) {\n  return `₹${new Intl.NumberFormat(\"en-IN\", {\n    maximumFractionDigits: 0,\n  }).format(price)}`;\n}\n","import * as types from \"../Types\";\n\nexport const setUserProfile = (userProfile) => ({\n  type: types.SET_USER_PROFILE,\n  payload: userProfile,\n});\n\nexport const setUserAddress = (addresses) => ({\n  type: types.SET_USER_ADDRESS,\n  payload: addresses,\n});\n\nexport const logoutUser = () => ({\n  type: types.LOGOUT_USER,\n});\n\n// actions for product cart\nexport const addToCart = (product) => ({\n  type: types.ADD_TO_CART,\n  payload: product,\n});\n\nexport const removeFromCart = (productId) => ({\n  type: types.REMOVE_FROM_CART,\n  payload: productId,\n});\n\nexport const emptyCart = () => ({\n  type: types.EMPTY_CART,\n});\n\nexport const updateQuantity = (productId, quantity) => ({\n  type: types.UPDATE_QUANTITY,\n  payload: { productId, quantity },\n});\n\n// actions for services cart\n\nexport const setServicesOnLogin = (services) => ({\n  type: types.SET_SERVICES_ON_LOGIN,\n  payload: services,\n});\n\nexport const addToServicesCart = (service) => ({\n  type: types.ADD_TO_SERVICE_CART,\n  payload: service,\n});\n\nexport const removeFromServicesCart = (subServiceId) => ({\n  type: types.REMOVE_FROM_SERVICE_CART,\n  payload: subServiceId,\n});\n\nexport const emptyServiceCart = () => ({\n  type: types.EMPTY_SERVICE_CART,\n});\n","import { Button } from \"react-bootstrap\";\n\nfunction CustomButton2({\n  buttonText = \"Book Now\",\n  handleSubmit,\n  faIcon,\n  buttonClass,\n}) {\n  return (\n    <Button\n      variant=\"contained\"\n      className={`!flex !items-center !justify-center gap-2 mt-4 w-full !bg-skyn !text-white py-2 px-4 rounded-md hover:bg-skyn-dark focus:outline-none focus:ring-2 focus:ring-skyn transition-all !shadow-[3px_3px_0px_black] hover:!shadow-none hover:!translate-x-[3px] hover:!translate-y-[3px] cursor-pointer ${buttonClass}`}\n      onClick={() => handleSubmit()}\n    >\n      {faIcon && faIcon} {buttonText}\n    </Button>\n  );\n}\n\nexport default CustomButton2;\n","import React from \"react\";\n\nconst FadedLineBreak = (classes) => {\n  const hrStyle = {\n    borderWidth: \"0 0 4px\",\n    borderImage:\n      \"linear-gradient(90deg, rgba(238, 101, 3, 0), rgba(238, 101, 3, 1) 50%, rgba(238, 101, 3, 0) 100%) 0 0 100%\",\n    borderStyle: \"solid\",\n    width: \"100%\",\n  };\n\n  return (\n    <div className={`my-6 ${classes}`}>\n      <hr style={hrStyle} />\n    </div>\n  );\n};\n\nexport default FadedLineBreak;\n","import axios from \"axios\";\nimport API_URLS from \"../../config/API_URLS\";\n\nconst axiosInstanceLogin = axios.create({\n  baseURL: API_URLS.baseURL,\n});\n\nconst axiosInstance = axios.create({\n  baseURL: API_URLS.baseURL,\n});\n\nconst token = () => sessionStorage.getItem(\"token\") || \"\";\n\naxiosInstanceLogin.interceptors.request.use(\n  (config) => {\n    config.headers = {\n      ...config.headers,\n    };\n    return config;\n  },\n  (err) => Promise.reject(err)\n);\n\naxiosInstanceLogin.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    Promise.reject(error?.response?.data);\n  }\n);\n\nconst getToken = async () => {\n  const accessToken = token();\n  try {\n    if (!accessToken) {\n      sessionStorage.clear();\n      window.location.href = `${window.location.origin}/login`;\n      return null;\n    }\n    return accessToken;\n  } catch (error) {\n    sessionStorage.clear();\n    window.location.href = `${window.location.origin}/login`;\n    return null;\n  }\n};\n\naxiosInstance.interceptors.request.use(\n  async (config) => {\n    const token = await getToken();\n    config.headers = {\n      Authorization: `Bearer ${token}`,\n      ...config.headers,\n    };\n\n    return config;\n  },\n  (err) => Promise.reject(err)\n);\n\naxiosInstance.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    Promise.reject(error?.response?.data);\n  }\n);\n\nexport { axiosInstance, axiosInstanceLogin };\n"],"names":["CustomTextField","lazy","CustomDropdown","CustomDatePicker","_ref","_formik$values","_formik$values2","_formik$errors","_formik$touched","isLoggedIn","formik","timeSlots","navigate","useNavigate","userProfile","useSelector","state","userAddressOptions","setUserAddressOptions","useState","useEffect","_userProfile$addresse","userAddresses","addresses","map","address","label","concat","fullName","addressLine1","addressLine2","city","pinCode","phone","value","id","_userProfile$addresse2","_userProfile$addresse3","selectedCity","find","values","setFieldValue","_jsx","_Fragment","children","className","_jsxs","FadedLineBreak","onClick","Suspense","fallback","textClassOverride","placeholderClasses","placeholder","requiredStar","labelToShow","name","textFieldColorClass","inputClassName","fieldWidth","onChange","handleChange","handleBlur","error","errors","touched","regex","maxLength","email","numeric","mobile","classes","showIconOutline","options","errorMessage","getIn","Link","to","disabledField","textClassToOverride","disablePast","setFieldTouched","treatmentDate","htmlFor","slot","index","type","timeSlot","createNewBooking","async","reqBody","_ref2","axiosInstanceLogin","post","API_URLS","Booking","createBooking","console","log","Error","handlePrimaryButtonClick","bookingData","bookingId","userInfo","servicesBooked","payment","formatDate","dateStr","Date","toLocaleDateString","formatTime","timeStr","toLocaleTimeString","hour","minute","AnimatePresence","motion","div","initial","opacity","animate","exit","transition","duration","scale","FaCheckCircle","service","_service$sessions","subServiceId","date","time","sessions","length","session","i","amount","transactionId","paymentMode","paymentDate","paymentTime","CustomLoader","CustomPackageTermsAndConditions","servicesCart","services","dispatch","useDispatch","showSnackbar","useAppSnackbar","packagePrice","setPackagePrice","removeItem","setRemoveItem","askForLogin","setAskForLogin","setSubServiceId","setTimeSlots","isOpenTandCModal","setIsOpenTandCModal","isChecked","setIsChecked","showBookingSuccessModal","setShowBookingSuccessModal","successBookingContent","setSuccessBookingContent","initialValues","setInitialValues","storedTimeSlots","sessionStorage","getItem","JSON","parse","mutate","isLoading","useMutation","onSuccess","res","status","data","message","onError","useFormik","enableReinitialize","validateOnMount","validateOnChange","validationSchema","getBookNowFormValidation","onSubmit","day","month","year","split","formattedDate","formattedTimeISO","toISOString","Array","isArray","beneficiary","userId","paymentId","totalPackagePrice","reduce","total","open","BookNowForm","src","selectedPackageImg","alt","packageName","treatmentName","INRCurrency","MdDeleteForever","size","handleItemRemove","checked","e","target","CustomButton2","buttonText","faIcon","MdOutlineShoppingCartCheckout","buttonClass","handleSubmit","handleServiceBooking","isValid","ConfirmationModal","title","handleCancel","confirmRemove","removeFromServicesCart","confirmButtonText","confirmButtonColor","imageSrc","Resources","images","Common","Warning","BookingSuccessModal","baseURL","Admin","getAllUsers","availableTechnicians","Auth","login","loginAdmin","registerUser","requestChangePassword","changePassword","getCartDetails","reqBooking","Cart","saveServiceCart","getServiceCart","Query","newQuery","updateQueryStatus","getAllQuery","getQueryWithFilter","Services","getAllServices","createService","Users","addAddress","getUserAddress","updateUserDetails","updateUserAddress","deleteUserAddress","loginInitialValues","password","getLoginValidation","yup","shape","required","signUpInitialValue","confirmPassword","getSignUpValidation","matches","mobileNumber","oneOf","getAddReviewValidation","rating","description","min","max","test","wordCount","trim","getQueryValidation","serviceId","alphabet","alphabetWithSpace","alphabetNumberWithSpace","stringWithSpaces","noRepeatMobileNumber","stringWithoutSpecialCharacters","emailValidationRegex","alphaNumeric","price","Intl","NumberFormat","maximumFractionDigits","format","setUserProfile","types","payload","setUserAddress","logoutUser","addToCart","product","removeFromCart","productId","emptyCart","updateQuantity","quantity","setServicesOnLogin","addToServicesCart","emptyServiceCart","Button","variant","style","borderWidth","borderImage","borderStyle","width","axios","create","axiosInstance","interceptors","request","use","config","headers","_objectSpread","err","Promise","reject","response","_error$response","getToken","accessToken","clear","window","location","href","origin","token","Authorization","_error$response2"],"sourceRoot":""}