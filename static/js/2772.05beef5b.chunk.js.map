{"version":3,"file":"static/js/2772.05beef5b.chunk.js","mappings":"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","sources":["config/MotionFramer/MotionWrapper/index.jsx","helpers/UserProfile/index.jsx","components/UserProfile/PersonalInformation/index.jsx","components/UserProfile/OrderHistory/index.jsx","components/UserProfile/AppointmentDetails/index.jsx","components/UserProfile/Address/index.jsx","components/UserProfile/index.jsx","pages/PureSkynUserProfile/index.jsx","shared/CustomHrTag/index.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\n\nconst MotionWrapper = ({ children }) => {\n  return (\n    <motion.div\n      initial={{ y: 35, opacity: 0 }}\n      whileInView={{ y: 0, opacity: 1 }}\n      transition={{ ease: \"easeInOut\", duration: 0.75 }}\n      viewport={{ once: true }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default MotionWrapper;\n","import * as yup from \"yup\";\n\nexport const addressInitialValues = {\n  id: \"\",\n  fullName: \"\",\n  phone: \"\",\n  addressLine1: \"\",\n  addressLine2: \"\",\n  city: \"\",\n  state: \"\",\n  pinCode: \"\",\n  country: \"\",\n};\n\nexport const getAddressValidationSchema = () =>\n  yup.object().shape({\n    fullName: yup.string().required(\"Name is required\"),\n    phone: yup\n      .string()\n      .matches(/^[0-9]{10}$/, \"Enter a valid 10-digit contact number\")\n      .required(\"Contact Number is required\"),\n    addressLine1: yup.string().required(\"Required\"),\n    addressLine2: yup.string().required(\"Required\"),\n    pinCode: yup\n      .string()\n      .length(6, \"Enter exactly 6 digits\")\n      .matches(/^[0-9]+$/, \"Enter a valid Pincode\")\n      .required(\"Pincode is required\"),\n    city: yup.string().required(\"City is required\"),\n    state: yup.string().required(\"State is required\"),\n  });\n\nexport const getPersonalInfoValidationSchema = () =>\n  yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    phone: yup\n      .string()\n      .matches(/^[0-9]{10}$/, \"Enter a valid 10-digit contact number\")\n      .required(\"Mobile number is required\"),\n    email: yup.string().email(\"Please Enter Valid Email\").required(\"Required\"),\n    gender: yup.string().required(\"Please select a gender\"),\n  });\n","import { useFormik } from \"formik\";\nimport React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { FiEdit3 } from \"react-icons/fi\";\nimport { useDispatch } from \"react-redux\";\nimport { getPersonalInfoValidationSchema } from \"../../../helpers/UserProfile\";\nimport { useAppSnackbar } from \"../../../config/Context/SnackbarContext\";\nimport { regex } from \"../../../helpers/Regex\";\nimport FadedLineBreak from \"../../../shared/CustomHrTag\";\nimport { useMutation } from \"react-query\";\nimport { updateUserDetails } from \"../../../services/Users\";\nimport { setUserProfile } from \"../../../redux/Actions\";\n\nconst CustomTextField = lazy(() => import(\"../../../shared/CustomTextField\"));\nconst CustomLoader = lazy(() => import(\"../../../shared/CustomLoader\"));\n\nexport default function PersonalInformation({ userProfile }) {\n  const showSnackbar = useAppSnackbar();\n  const dispatch = useDispatch();\n  const [editMode, setEditMode] = useState(false);\n  const [profileMessage, setProfileMessage] = useState(\"\");\n  const [formikInitialValues, setFormikInitialValues] = useState({\n    name: userProfile?.name || \"\",\n    phone: userProfile?.phone || \"\",\n    email: userProfile?.email || \"\",\n    gender: userProfile?.gender || \"\",\n  });\n\n  const genders = [\"Male\", \"Female\", \"Others\"];\n\n  useEffect(() => {\n    const isAnyFieldEmpty = Object.values(formikInitialValues).some(\n      (value) => value === \"\"\n    );\n\n    if (isAnyFieldEmpty) {\n      setProfileMessage(\"Please update your profile!\");\n    } else {\n      setProfileMessage(\"\");\n    }\n  }, [formikInitialValues]);\n\n  const { mutate: updateDetails, isLoading } = useMutation(updateUserDetails, {\n    onSuccess(res) {\n      const data = res?.data;\n      if (res?.status === \"SUCCESS\") {\n        setEditMode(false);\n        showSnackbar(res?.message, \"success\");\n        dispatch(\n          setUserProfile({\n            userId: data?.id,\n            email: data?.email,\n            name: data?.name,\n            phone: data?.phone,\n            gender: data?.gender,\n          })\n        );\n        setFormikInitialValues({\n          name: data?.name,\n          phone: data?.phone,\n          email: data?.email,\n          gender: data?.gender,\n        });\n      } else {\n        setEditMode(true);\n        showSnackbar(res?.message, \"error\");\n      }\n    },\n    onError(err) {\n      setEditMode(true);\n      showSnackbar(err?.message, \"error\");\n    },\n  });\n\n  const personalInfoFormik = useFormik({\n    enableReinitialize: true,\n    validateOnMount: true,\n    validateOnChange: true,\n    initialValues: {\n      name: userProfile?.name || \"\",\n      phone: userProfile?.phone || \"\",\n      email: userProfile?.email || \"\",\n      gender: userProfile?.gender || \"\",\n    },\n    validationSchema: getPersonalInfoValidationSchema,\n    onSubmit: (value) => {\n      const reqBody = {\n        id: userProfile?.userId || \"\",\n        ...value,\n      };\n      updateDetails({ reqBody });\n    },\n  });\n\n  const handleUpdate = () => {\n    if (!personalInfoFormik.isValid) {\n      showSnackbar(\"Please fill required details!\", \"error\");\n    } else {\n      personalInfoFormik.handleSubmit();\n    }\n  };\n\n  const handleCancel = () => {\n    if (!personalInfoFormik.isValid) {\n      showSnackbar(\"Please fill required details!\", \"error\");\n    } else {\n      setEditMode(false);\n      personalInfoFormik.setValues(formikInitialValues);\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <Suspense fallback={<div>Loading...</div>}>\n        <CustomLoader open={isLoading} />\n      </Suspense>\n      {profileMessage && (\n        <small className=\"text-bitterSweet\">\n          <strong className=\"!text-black\">Note: </strong>\n          {profileMessage}\n        </small>\n      )}\n      <form>\n        <div className=\"flex flex-col md:!flex-row items-center gap-4 mb-4 justify-center mt-4\">\n          <span className=\"font-semibold text-cello font-poppins text-xl\">\n            Personal Information\n          </span>\n          <FiEdit3\n            className=\"text-gray-500 cursor-pointer hover:text-gray-800 transition\"\n            size={20}\n            onClick={() => setEditMode(!editMode)}\n          />\n        </div>\n        <FadedLineBreak />\n        <div className=\"grid lg:!grid-cols-3 gap-4 font-poppins p-4\">\n          <div>\n            {editMode ? (\n              <Suspense fallback={<div />}>\n                <CustomTextField\n                  textClassOverride=\"!text-kashmirBlue\"\n                  placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                  className=\"h-12 rounded-md !bg-transparent\"\n                  placeholder=\"Enter\"\n                  requiredStar\n                  labelToShow=\"Full Name\"\n                  name=\"name\"\n                  textFieldColorClass=\"shadow-insetLight\"\n                  inputClassName=\"!bg-transparent\"\n                  fieldWidth=\"!mb-4\"\n                  value={personalInfoFormik.values.name}\n                  onChange={personalInfoFormik.handleChange}\n                  handleBlur={personalInfoFormik.handleBlur}\n                  error={personalInfoFormik.errors.name}\n                  touched={personalInfoFormik.touched.name}\n                />\n              </Suspense>\n            ) : (\n              <div className=\"flex flex-col\">\n                <span className=\"text-black font-medium\">Full Name</span>\n                <span className=\"text-kashmirBlue\">\n                  {\" \"}\n                  {personalInfoFormik.values.name}\n                </span>\n              </div>\n            )}\n          </div>\n          <div>\n            {editMode ? (\n              <Suspense fallback={<div />}>\n                <CustomTextField\n                  textClassOverride=\"!text-cello\"\n                  placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                  className=\"h-12 rounded-md !bg-transparent\"\n                  placeholder=\"Enter\"\n                  requiredStar\n                  labelToShow=\"Contact Number\"\n                  maxLength={10}\n                  regex={regex.numeric}\n                  name=\"phone\"\n                  textFieldColorClass=\"shadow-insetLight\"\n                  inputClassName=\"!bg-transparent\"\n                  fieldWidth=\"!mb-4\"\n                  value={personalInfoFormik.values.phone}\n                  onChange={personalInfoFormik.handleChange}\n                  handleBlur={personalInfoFormik.handleBlur}\n                  error={personalInfoFormik.errors.phone}\n                  touched={personalInfoFormik.touched.phone}\n                />\n              </Suspense>\n            ) : (\n              <div className=\"flex flex-col\">\n                <span className=\"text-black font-medium\">Phone</span>\n                <span className=\"text-cello font-poppins\">\n                  {\" \"}\n                  {personalInfoFormik.values.phone}\n                </span>\n              </div>\n            )}\n          </div>\n          <div className=\"flex flex-col\">\n            {editMode ? (\n              <>\n                <span className=\"text-sm font-medium pb-1 !text-cello\">\n                  Gender<small className=\"text-bitterSweet\">*</small>\n                </span>\n                <div className=\"grid grid-cols-1 gap-2\">\n                  {genders.map((gender, index) => (\n                    <button\n                      key={index}\n                      type=\"button\"\n                      className={`py-2 lg:px-4 rounded-lg text-sm font-medium transition-all border ${\n                        personalInfoFormik.values.gender === gender\n                          ? \"bg-skyn text-white border-skyn shadow-md\"\n                          : \"bg-white text-gray-700 border-gray-300 hover:bg-gray-100\"\n                      }`}\n                      onClick={() =>\n                        personalInfoFormik.setFieldValue(\"gender\", gender)\n                      }\n                    >\n                      {gender}\n                    </button>\n                  ))}\n                </div>\n              </>\n            ) : (\n              <div className=\"flex flex-col\">\n                {\" \"}\n                <span className=\"text-black font-medium\">Gender</span>\n                <span className=\"text-cello\">\n                  {personalInfoFormik.values.gender}\n                </span>\n              </div>\n            )}\n          </div>\n          <div>\n            {editMode ? (\n              <Suspense fallback={<div />}>\n                <CustomTextField\n                  textClassOverride=\"!text-cello\"\n                  placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                  className=\"h-12 rounded-md !bg-transparent\"\n                  placeholder=\"Enter\"\n                  requiredStar\n                  regex={/^[^!#$%^&*()=+{}[\\]:;<>,?/~`|\"\\\\ ]*$/}\n                  labelToShow=\"Email Id\"\n                  name=\"email\"\n                  textFieldColorClass=\"shadow-insetLight\"\n                  inputClassName=\"!bg-transparent\"\n                  fieldWidth=\"!mb-4\"\n                  maxLength={50}\n                  value={personalInfoFormik.values?.email}\n                  onChange={personalInfoFormik.handleChange}\n                  handleBlur={personalInfoFormik.handleBlur}\n                  error={personalInfoFormik.errors?.email}\n                  touched={personalInfoFormik.touched?.email}\n                />\n              </Suspense>\n            ) : (\n              <div className=\"flex flex-col\">\n                {\" \"}\n                <span className=\"text-black font-medium\">Email Id</span>\n                <span className=\"text-cello\">\n                  {personalInfoFormik.values.email}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      </form>\n      {editMode && (\n        <div className=\"flex gap-5\">\n          <div className=\"mt-6 flex justify-end\">\n            <button\n              type=\"button\"\n              className=\"bg-aliceBlue-2 text-cello py-2 px-6 rounded-lg font-medium hover:opacity-80 transition-all\"\n              onClick={handleCancel}\n            >\n              Cancel\n            </button>\n          </div>\n          <div className=\"mt-6 flex justify-end\">\n            <button\n              type=\"button\"\n              className=\"bg-skyn text-white py-2 px-6 rounded-lg font-medium hover:opacity-80 transition-all\"\n              onClick={handleUpdate}\n            >\n              Update\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport FadedLineBreak from \"../../../shared/CustomHrTag\";\n\nexport default function OrderHistory({ orderHistory }) {\n  return (\n    <div>\n      <p className=\"font-semibold text-cello font-poppins text-xl text-center\">\n        My Orders\n      </p>\n      <FadedLineBreak />\n      <div className=\"grid grid-cols-1 gap-4\">\n        {orderHistory.map((order) => (\n          <div key={order.id} className=\"flex flex-col\">\n            <span className=\"text-black\">{order.product}</span>\n            <span className=\"text-kashmirBlue\">\n              Ordered on - {order.orderedOn}\n            </span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport FadedLineBreak from \"../../../shared/CustomHrTag\";\n\nexport default function AppointmentDetails({ appointmentDetails }) {\n  return (\n    <div>\n      {\" \"}\n      <p className=\"font-semibold text-cello font-poppins text-xl text-center\">\n        My Appointments\n      </p>\n      <FadedLineBreak />\n      <div className=\"grid grid-cols-1 gap-4\">\n        {appointmentDetails.map((appointment) => (\n          <div key={appointment.id} className=\"flex flex-col\">\n            <span className=\"text-black\">{appointment.treatmentName}</span>\n            <span className=\"text-kashmirBlue\">{appointment.date}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { lazy, Suspense, useState } from \"react\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { FiEdit2, FiTrash2 } from \"react-icons/fi\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { regex } from \"../../../helpers/Regex\";\nimport { useAppSnackbar } from \"../../../config/Context/SnackbarContext\";\nimport FadedLineBreak from \"../../../shared/CustomHrTag\";\nimport {\n  deleteUserAddress,\n  getUserAddress,\n  updateUserAddress,\n} from \"../../../services/Users\";\nimport { removeAddress } from \"../../../redux/Actions\";\n\nconst CustomTextField = lazy(() => import(\"../../../shared/CustomTextField\"));\nconst CustomLoader = lazy(() => import(\"../../../shared/CustomLoader\"));\n\nexport default function Address({\n  addresses,\n  setAddresses,\n  addressFormik,\n  isAdding,\n  setIsAdding,\n  handleAddressSubmit,\n}) {\n  const [editingAddressIndex, setEditingAddressIndex] = useState(null);\n  const [isConfirmingDelete, setIsConfirmingDelete] = useState(false);\n  const [deleteAddress, setDeleteAddress] = useState({});\n  const showSnackbar = useAppSnackbar();\n  const dispatch = useDispatch();\n\n  const userProfile = useSelector((state) => state.userProfile.userProfile);\n\n  const { isFetching, refetch } = useQuery(\n    [\"getUserAddress\"],\n    () => getUserAddress({ userId: userProfile.userId }),\n    {\n      refetchOnMount: true,\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false,\n      retry: false,\n      onSuccess: (response) => {\n        if (response?.status === \"SUCCESS\") {\n          setAddresses(response?.data);\n          response?.data?.map((item) =>\n            addressFormik.setValues({\n              id: item.id || \"\",\n              fullName: item.fullName || \"\",\n              phone: item.phone || \"\",\n              addressLine1: item.addressLine1 || \"\",\n              addressLine2: item.addressLine2 || \"\",\n              city: item.city || \"\",\n              state: item.state || \"\",\n              pinCode: item.pinCode || \"\",\n              country: \"India\",\n            })\n          );\n        } else {\n          if (!response?.message.includes(\"No addresses found\")) {\n            showSnackbar(response?.message, \"error\");\n          }\n        }\n      },\n      onError: (err) => {\n        showSnackbar(err?.message, \"error\");\n      },\n    }\n  );\n\n  const { mutate: updateAddress, isLoading } = useMutation(updateUserAddress, {\n    onSuccess(res) {\n      if (res?.status === \"SUCCESS\") {\n        showSnackbar(res?.message, \"success\");\n        refetch();\n      } else {\n        showSnackbar(res?.message, \"error\");\n      }\n    },\n    onError(err) {\n      showSnackbar(err?.message, \"error\");\n    },\n  });\n\n  const handleEdit = (index) => {\n    const address = addresses[index];\n    setIsAdding(true);\n    setEditingAddressIndex(index);\n    addressFormik.setValues({\n      id: address.id || \"\",\n      fullName: address.fullName || \"\",\n      phone: address.phone || \"\",\n      addressLine1: address.addressLine1 || \"\",\n      addressLine2: address.addressLine2 || \"\",\n      city: address.city || \"\",\n      state: address.state || \"\",\n      pinCode: address.pinCode || \"\",\n      country: \"India\",\n    });\n  };\n\n  const handleSave = () => {\n    if (!addressFormik.isValid) {\n      showSnackbar(\"Please enter all the required fields!\", \"error\");\n      return;\n    }\n    if (editingAddressIndex !== null) {\n      const updatedAddress = {\n        ...addresses[editingAddressIndex],\n        ...addressFormik.values,\n      };\n      const reqBody = {\n        userId: userProfile.userId,\n        addressId: updatedAddress.id,\n        updatedAddress: {\n          id: updatedAddress.id,\n          fullName: updatedAddress.fullName,\n          phone: updatedAddress.phone,\n          addressLine1: updatedAddress.addressLine1,\n          addressLine2: updatedAddress.addressLine2,\n          city: updatedAddress.city,\n          state: updatedAddress.state,\n          pinCode: updatedAddress.pinCode,\n          country: \"India\",\n        },\n      };\n      updateAddress({ reqBody });\n    } else {\n      handleAddressSubmit();\n    }\n    setEditingAddressIndex(null);\n    setIsAdding(false);\n  };\n\n  const handleCancel = () => {\n    setIsAdding(false);\n    setEditingAddressIndex(null);\n    addressFormik.resetForm();\n  };\n\n  const handleDelete = (address) => {\n    setDeleteAddress(address);\n    setIsConfirmingDelete(true);\n  };\n\n  const { mutate: delAddress, isLoading: isDeletingAddress } = useMutation(\n    deleteUserAddress,\n    {\n      onSuccess: (res) => {\n        if (res?.status === \"SUCCESS\") {\n          showSnackbar(res?.message, \"success\");\n          setIsConfirmingDelete(false);\n          const currentAddresses = res?.data?.addresses;\n          dispatch(removeAddress(currentAddresses));\n          refetch();\n        } else {\n          showSnackbar(res?.message, \"error\");\n        }\n      },\n      onError: (err) => {\n        showSnackbar(err?.message, \"error\");\n      },\n    }\n  );\n\n  const confirmDelete = () => {\n    delAddress({ userId: userProfile.userId, addressId: deleteAddress.id });\n    // setAddresses(updatedAddresses);\n  };\n\n  const cancelDelete = () => {\n    setIsConfirmingDelete(false);\n    setDeleteAddress(null);\n  };\n\n  return (\n    <div>\n      <Suspense fallback={<div />}>\n        <CustomLoader open={isFetching || isLoading || isDeletingAddress} />\n      </Suspense>\n      <p className=\"font-semibold text-cello font-poppins text-xl text-center mt-4\">\n        Address Details\n      </p>\n      <FadedLineBreak />\n      <div className=\"grid xl:!grid-cols-2 gap-4 mt-4 font-poppins\">\n        {addresses.map((address, index) => (\n          <div\n            key={index}\n            className=\"flex flex-col justify-between bg-white p-5 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 ease-in-out\"\n          >\n            <>\n              <p className=\"text-gray-600 font-bold\">{address.fullName}</p>\n              <p className=\"text-gray-600 text-sm mt-2\">{address.phone}</p>\n              <p className=\"text-gray-600 text-sm\">{address.addressLine1}</p>\n              <p className=\"text-gray-600 text-sm\">{address.addressLine2}</p>\n              <p className=\"text-gray-600 text-sm\">\n                {`${address.city}, ${address.state} - ${address.pinCode}`}\n              </p>\n              <hr className=\"my-4 border-blue-gray-50 px-8\" />\n            </>\n            <div className=\"flex flex-col lg:!flex-row gap-3 mt-4\">\n              <button\n                onClick={() => handleEdit(index)}\n                className=\"flex items-center space-x-1 text-sm bg-skyn justify-center text-white hover:opacity-80 transition-all duration-300 px-4 py-2 rounded shadow-lg\"\n              >\n                <FiEdit2 />\n                <span>Edit</span>\n              </button>\n              <button\n                onClick={() => handleDelete(address)}\n                className=\"flex items-center space-x-1 text-sm justify-center bg-red-600 text-white hover:opacity-80 transition-all duration-300 px-4 py-2 rounded shadow-lg\"\n              >\n                <FiTrash2 />\n                <span>Delete</span>\n              </button>\n            </div>\n          </div>\n        ))}\n        {!isAdding && (\n          <button\n            onClick={() => {\n              setIsAdding(true);\n              setEditingAddressIndex(null);\n              addressFormik.resetForm();\n            }}\n            className=\"flex items-center justify-center p-4 border rounded-md shadow-md bg-gray-100 hover:bg-gray-200 transition\"\n          >\n            <AiOutlinePlus className=\"text-4xl text-gray-600\" />\n          </button>\n        )}\n      </div>\n      {isConfirmingDelete && (\n        <AnimatePresence>\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"bg-slate-900/20 backdrop-blur p-4 fixed inset-0 z-50 md:grid place-items-center place-content-center overflow-scroll\"\n          >\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              exit={{ scale: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"bg-white p-6 rounded-lg w-full max-w-lg\"\n            >\n              <h3 className=\"font-bold text-lg mb-4\">\n                Are you sure you want to delete this address?\n              </h3>\n              <div className=\"flex justify-end gap-4\">\n                <button\n                  onClick={cancelDelete}\n                  className=\"bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={confirmDelete}\n                  className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700\"\n                >\n                  Confirm\n                </button>\n              </div>\n            </motion.div>\n          </motion.div>\n        </AnimatePresence>\n      )}\n      {isAdding && (\n        <AnimatePresence>\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.45 }}\n            className=\"bg-slate-900/20 backdrop-blur p-4 fixed inset-0 z-50 md:grid place-items-center overflow-scroll\"\n          >\n            <motion.div\n              initial={{ scale: 0, rotate: \"12.5deg\" }}\n              animate={{ scale: 1, rotate: \"0deg\" }}\n              exit={{ scale: 0, rotate: \"-12.5deg\" }}\n              transition={{ duration: 0.45 }}\n              onClick={(e) => e.stopPropagation()}\n              className=\"bg-white p-6 rounded-lg w-full max-w-lg\"\n            >\n              <form>\n                {/* Contact Details */}\n                <h2 className=\"font-bold mb-4 text-lg\">Contact Details</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <Suspense fallback={<div />}>\n                    <CustomTextField\n                      textClassOverride=\"!text-kashmirBlue\"\n                      placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                      className=\"h-12 rounded-md !bg-transparent\"\n                      placeholder=\"Enter\"\n                      requiredStar\n                      labelToShow=\"Full Name\"\n                      name=\"fullName\"\n                      textFieldColorClass=\"shadow-insetLight\"\n                      inputClassName=\"!bg-transparent\"\n                      fieldWidth=\"w-full !mb-4\"\n                      value={addressFormik.values?.fullName}\n                      onChange={addressFormik.handleChange}\n                      handleBlur={addressFormik.handleBlur}\n                      error={addressFormik.errors.fullName}\n                      touched={addressFormik.touched.fullName}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div />}>\n                    <CustomTextField\n                      textClassOverride=\"!text-kashmirBlue\"\n                      placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                      className=\"h-12 rounded-md !bg-transparent\"\n                      placeholder=\"Enter\"\n                      requiredStar\n                      labelToShow=\"Contact Number\"\n                      name=\"phone\"\n                      maxLength={10}\n                      regex={regex.numeric}\n                      textFieldColorClass=\"shadow-insetLight\"\n                      inputClassName=\"!bg-transparent\"\n                      fieldWidth=\"w-full !mb-4\"\n                      value={addressFormik.values?.phone}\n                      onChange={addressFormik.handleChange}\n                      handleBlur={addressFormik.handleBlur}\n                      error={addressFormik.errors.phone}\n                      touched={addressFormik.touched.phone}\n                    />\n                  </Suspense>\n                </div>\n                <h2 className=\"font-bold mb-4 text-lg\">Address Details</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {/* Address Fields */}\n                  <Suspense fallback={<div />}>\n                    <CustomTextField\n                      textClassOverride=\"!text-kashmirBlue\"\n                      placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                      className=\"h-12 rounded-md !bg-transparent\"\n                      placeholder=\"Enter\"\n                      requiredStar\n                      labelToShow=\"Address Line 1\"\n                      name=\"addressLine1\"\n                      textFieldColorClass=\"shadow-insetLight\"\n                      inputClassName=\"!bg-transparent\"\n                      fieldWidth=\"w-full !mb-4\"\n                      value={addressFormik.values?.addressLine1}\n                      onChange={addressFormik.handleChange}\n                      handleBlur={addressFormik.handleBlur}\n                      error={addressFormik.errors.addressLine1}\n                      touched={addressFormik.touched.addressLine1}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div />}>\n                    <CustomTextField\n                      textClassOverride=\"!text-kashmirBlue\"\n                      placeholderClasses=\"placeholder:!opacity-30 !text-licorice\"\n                      className=\"h-12 rounded-md !bg-transparent\"\n                      placeholder=\"Enter\"\n                      requiredStar\n                      labelToShow=\"Address Line 2\"\n                      name=\"addressLine2\"\n                      textFieldColorClass=\"shadow-insetLight\"\n                      inputClassName=\"!bg-transparent\"\n                      fieldWidth=\"w-full !mb-4\"\n                      value={addressFormik.values?.addressLine2}\n                      onChange={addressFormik.handleChange}\n                      handleBlur={addressFormik.handleBlur}\n                      error={addressFormik.errors.addressLine2}\n                      touched={addressFormik.touched.addressLine2}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div />}>\n                    <CustomTextField\n                      textClassOverride=\"!text-kashmirBlue\"\n                      placeholderClasses=\"placeholder:!opacity-30 !text-licorice \"\n                      className=\"h-12 rounded-md !bg-transparent\"\n                      placeholder=\"Enter\"\n                      requiredStar\n                      labelToShow=\"Pincode\"\n                      regex={regex.numeric}\n                      name=\"pinCode\"\n                      maxLength={6}\n                      textFieldColorClass=\"shadow-insetLight\"\n                      inputClassName=\"!bg-transparent\"\n                      fieldWidth=\"!mb-4\"\n                      value={addressFormik.values?.pinCode}\n                      // onChange={handlePinCodeChange}\n                      onChange={addressFormik.handleChange}\n                      handleBlur={addressFormik.handleBlur}\n                      error={addressFormik.errors.pinCode}\n                      touched={addressFormik.touched.pinCode}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div />}>\n                    <CustomTextField\n                      textClassOverride=\"!text-kashmirBlue\"\n                      placeholderClasses=\"placeholder:!opacity-30 !text-licorice \"\n                      className=\"h-12 rounded-md !bg-transparent\"\n                      placeholder=\"City\"\n                      requiredStar\n                      labelToShow=\"City\"\n                      name=\"city\"\n                      textFieldColorClass=\"shadow-insetLight\"\n                      inputClassName=\"!bg-transparent\"\n                      fieldWidth=\"!mb-4\"\n                      value={addressFormik.values?.city}\n                      onChange={addressFormik.handleChange}\n                      handleBlur={addressFormik.handleBlur}\n                      error={addressFormik.errors.city}\n                      touched={addressFormik.touched.city}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div />}>\n                    <CustomTextField\n                      textClassOverride=\"!text-kashmirBlue\"\n                      placeholderClasses=\"placeholder:!opacity-30 !text-licorice \"\n                      className=\"h-12 rounded-md !bg-transparent\"\n                      placeholder=\"State\"\n                      requiredStar\n                      labelToShow=\"State\"\n                      name=\"state\"\n                      textFieldColorClass=\"shadow-insetLight\"\n                      inputClassName=\"!bg-transparent\"\n                      fieldWidth=\"!mb-4\"\n                      value={addressFormik.values?.state}\n                      onChange={addressFormik.handleChange}\n                      handleBlur={addressFormik.handleBlur}\n                      error={addressFormik.errors.state}\n                      touched={addressFormik.touched.state}\n                    />\n                  </Suspense>\n                </div>\n              </form>\n              <div className=\"flex flex-col md:!flex-row justify-end gap-4 mt-5\">\n                <button\n                  type=\"button\"\n                  onClick={handleCancel}\n                  className=\"bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300 shadow-md\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"bg-skyn text-white px-4 py-2 rounded-md hover:bg-skyn-dark hover:opacity-80 shadow-md\"\n                  onClick={handleSave}\n                >\n                  {editingAddressIndex !== null\n                    ? \"Save Changes\"\n                    : \"Add Address\"}\n                </button>\n              </div>\n            </motion.div>\n          </motion.div>\n        </AnimatePresence>\n      )}\n    </div>\n  );\n}\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  addressInitialValues,\n  getAddressValidationSchema,\n} from \"../../helpers/UserProfile\";\nimport { Breadcrumbs, Typography, useMediaQuery } from \"@mui/material\";\nimport { FaMapLocationDot } from \"react-icons/fa6\";\nimport { FaUser } from \"react-icons/fa\";\nimport { FaShoppingCart } from \"react-icons/fa\";\nimport { MdOutlineMedicalServices } from \"react-icons/md\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useMutation } from \"react-query\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useAppSnackbar } from \"../../config/Context/SnackbarContext\";\nimport PersonalInformation from \"./PersonalInformation\";\nimport OrderHistory from \"./OrderHistory\";\nimport AppointmentDetails from \"./AppointmentDetails\";\nimport Address from \"./Address\";\nimport MotionWrapper from \"../../config/MotionFramer/MotionWrapper\";\nimport { addUserAddress, getUserAddress } from \"../../services/Users\";\nimport { setUserAddress } from \"../../redux/Actions\";\n\nconst CustomLoader = lazy(() => import(\"../../shared/CustomLoader\"));\n\nfunction UserProfile() {\n  const isAdmin = false;\n  const showSnackbar = useAppSnackbar();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userProfile = useSelector((state) => state.userProfile.userProfile);\n\n  const [addresses, setAddresses] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [selectedSection, setSelectedSection] = useState(\"Profile\");\n\n  useEffect(() => {\n    const targetSection = decodeURIComponent(location.hash.replace(\"#\", \"\"));\n    if (targetSection) {\n      setSelectedSection(targetSection);\n    }\n  }, [location.hash]);\n\n  const handleSectionClick = (sectionId) => {\n    setSelectedSection(sectionId);\n    navigate(\"/user-profile\", { replace: true });\n  };\n\n  const fullName = \"Milan Mishra\";\n  const phoneNumber = \"8767898766\";\n\n  const isTablet = useMediaQuery(\"(max-width: 1023px)\");\n  const isMobile = useMediaQuery(\"(max-width: 767px)\");\n\n  const appointmentDetails = [\n    { id: 1, treatmentName: \"Laser Hair Removal\", date: \"11-12-2024\" },\n    { id: 2, treatmentName: \"Oxy Hydra\", date: \"12-12-2024\" },\n  ];\n\n  const orderHistory = [\n    { id: 1, product: \"Cleanser\", orderedOn: \"11-12-2024\" },\n    { id: 2, product: \"Vitamin C Hydra Gel Creame\", orderedOn: \"12-12-2024\" },\n  ];\n\n  const sidebarItemsForAdmin = [\n    { id: \"Profile\", label: \"My Profile\", icon: <FaUser /> },\n  ];\n\n  const sidebarItems = [\n    { id: \"Profile\", label: \"My Profile\", icon: <FaUser /> },\n    { id: \"Address\", label: \"Address\", icon: <FaMapLocationDot /> },\n    {\n      id: \"Appointments\",\n      label: \"My Appointments\",\n      icon: <MdOutlineMedicalServices />,\n    },\n    { id: \"Orders\", label: \"My Orders\", icon: <FaShoppingCart /> },\n  ];\n\n  const { mutate: getUserAddresses, isFetching } = useMutation(getUserAddress, {\n    onSuccess(res) {\n      if (res?.status === \"SUCCESS\") {\n        const addresses = res?.data;\n        setAddresses(addresses);\n        dispatch(setUserAddress({ addresses }));\n      } else {\n        showSnackbar(res?.message, \"error\");\n      }\n    },\n    onError(err) {\n      showSnackbar(err.message, \"error\");\n    },\n  });\n\n  const { mutate: addAddress, isLoading } = useMutation(addUserAddress, {\n    onSuccess(res) {\n      if (res?.status === \"SUCCESS\") {\n        showSnackbar(res.message, \"success\");\n        setAddresses([\n          ...addresses,\n          res?.data?.addresses.map((item) => ({\n            id: item.id || \"\",\n            name: item.name || \"\",\n            phone: item.phone || \"\",\n            addressLine1: item.addressLine1 || \"\",\n            addressLine2: item.addressLine2 || \"\",\n            city: item.city || \"\",\n            state: item.state || \"\",\n            pinCode: item.pinCode || \"\",\n          })),\n        ]);\n        setIsAdding(false);\n        getUserAddresses({ userId: userProfile.userId });\n      } else {\n        showSnackbar(res.message, \"error\");\n      }\n    },\n    onError(err) {\n      showSnackbar(err.message, \"error\");\n    },\n  });\n\n  const addressFormik = useFormik({\n    enableReinitialize: true,\n    validateOnMount: true,\n    validateOnChange: true,\n    initialValues: addressInitialValues,\n    validationSchema: getAddressValidationSchema,\n    onSubmit: (values, { resetForm }) => {\n      addAddress({\n        userId: userProfile.userId,\n        addressDetails: {\n          fullName: values?.fullName,\n          phone: values?.phone,\n          addressLine1: values?.addressLine1,\n          addressLine2: values?.addressLine2,\n          city: values?.city,\n          state: values?.state,\n          pinCode: values?.pinCode,\n          country: \"India\",\n        },\n      });\n      resetForm();\n    },\n  });\n\n  const handleAddressSubmit = () => {\n    if (!addressFormik.isValid) {\n      showSnackbar(\"Please fill all the required fields\", \"error\");\n    } else {\n      addressFormik.handleSubmit();\n    }\n  };\n\n  const breadcrumbs = [\n    <Link\n      key=\"1\"\n      to=\"/\"\n      className=\"text-skyn no-underline !font-poppins hover:opacity-80 text-lg\"\n    >\n      Home\n    </Link>,\n    <Typography key=\"2\" className=\"!text-cello !font-poppins !text-lg\">\n      Profile\n    </Typography>,\n  ];\n\n  return (\n    <MotionWrapper>\n      <Suspense>\n        <CustomLoader open={isLoading || isFetching} />\n      </Suspense>\n      <div className={`mt-3 ${isTablet ? \"py-3\" : \"py-4 mt-4\"}`}>\n        <div className={`mt-5 ${isTablet ? \"px-3\" : \"px-5\"}`}>\n          <Breadcrumbs\n            separator=\">\"\n            aria-label=\"breadcrumb\"\n            className=\"mb-4 py-2\"\n          >\n            {breadcrumbs}\n          </Breadcrumbs>\n        </div>\n        <div\n          className={`flex flex-col md:!flex-row mt-3 md:!space-x-5 space-y-5 md:!space-y-0 ${isTablet ? \"px-3\" : \"px-5\"}`}\n        >\n          {/* Sidebar */}\n          <div\n            className={`flex flex-col shadow rounded font-poppins sm:w-full md:!w-3/5 lg:!w-1/3 xl:!1/5 md:!self-start`}\n          >\n            <div className=\"flex flex-col bg-skyn text-white font-bold p-4 rounded-t-lg\">\n              <p>{fullName}</p>\n              <p>{phoneNumber}</p>\n            </div>\n            <div className=\"flex flex-col p-4\">\n              {(isAdmin ? sidebarItemsForAdmin : sidebarItems).map((item) => (\n                <div\n                  key={item.id}\n                  className={`flex items-center space-x-2 w-full p-2 rounded cursor-pointer mb-2 ${\n                    selectedSection === item.id\n                      ? \"!bg-slate-300\"\n                      : \"hover:!bg-slate-300\"\n                  }`}\n                  onClick={() => handleSectionClick(item.id)}\n                >\n                  {item.icon}\n                  <div className=\"flex-1\">{item.label}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"shadow md:!p-5 rounded w-full\">\n            {selectedSection === \"Profile\" && (\n              <Suspense fallback={<div />}>\n                <PersonalInformation userProfile={userProfile} />\n              </Suspense>\n            )}\n            {selectedSection === \"Address\" && (\n              <Suspense fallback={<div />}>\n                <Address\n                  addresses={addresses}\n                  setAddresses={setAddresses}\n                  addressFormik={addressFormik}\n                  isAdding={isAdding}\n                  setIsAdding={setIsAdding}\n                  handleAddressSubmit={handleAddressSubmit}\n                />\n              </Suspense>\n            )}\n            {selectedSection === \"Appointments\" && (\n              <Suspense fallback={<div />}>\n                <AppointmentDetails appointmentDetails={appointmentDetails} />\n              </Suspense>\n            )}\n            {selectedSection === \"Orders\" && (\n              <Suspense fallback={<div />}>\n                <OrderHistory orderHistory={orderHistory} />\n              </Suspense>\n            )}\n          </div>\n        </div>\n      </div>\n    </MotionWrapper>\n  );\n}\n\nexport default UserProfile;\n","import UserProfile from \"../../components/UserProfile\";\n\nfunction PureSkynUserProfile() {\n    return (\n        <UserProfile />\n    )\n}\n\nexport default PureSkynUserProfile;","import React from \"react\";\n\nconst FadedLineBreak = () => {\n  const hrStyle = {\n    borderWidth: \"0 0 4px\",\n    borderImage:\n      \"linear-gradient(90deg, rgba(238, 101, 3, 0), rgba(238, 101, 3, 1) 50%, rgba(238, 101, 3, 0) 100%) 0 0 100%\",\n    borderStyle: \"solid\",\n    width: \"100%\",\n  };\n\n  return (\n    <div className=\"my-6\">\n      <hr style={hrStyle} />\n    </div>\n  );\n};\n\nexport default FadedLineBreak;\n"],"names":["_ref","children","_jsx","motion","div","initial","y","opacity","whileInView","transition","ease","duration","viewport","once","addressInitialValues","id","fullName","phone","addressLine1","addressLine2","city","state","pinCode","country","getAddressValidationSchema","yup","shape","required","matches","length","getPersonalInfoValidationSchema","name","email","gender","CustomTextField","lazy","CustomLoader","PersonalInformation","_personalInfoFormik$v","_personalInfoFormik$e","_personalInfoFormik$t","userProfile","showSnackbar","useAppSnackbar","dispatch","useDispatch","editMode","setEditMode","useState","profileMessage","setProfileMessage","formikInitialValues","setFormikInitialValues","useEffect","isAnyFieldEmpty","Object","values","some","value","mutate","updateDetails","isLoading","useMutation","updateUserDetails","onSuccess","res","data","status","message","setUserProfile","userId","onError","err","personalInfoFormik","useFormik","enableReinitialize","validateOnMount","validateOnChange","initialValues","validationSchema","onSubmit","reqBody","_objectSpread","_jsxs","className","Suspense","fallback","open","FiEdit3","size","onClick","FadedLineBreak","textClassOverride","placeholderClasses","placeholder","requiredStar","labelToShow","textFieldColorClass","inputClassName","fieldWidth","onChange","handleChange","handleBlur","error","errors","touched","maxLength","regex","numeric","_Fragment","map","index","type","concat","setFieldValue","handleCancel","isValid","setValues","handleUpdate","handleSubmit","OrderHistory","orderHistory","order","product","orderedOn","AppointmentDetails","appointmentDetails","appointment","treatmentName","date","Address","_addressFormik$values","_addressFormik$values2","_addressFormik$values3","_addressFormik$values4","_addressFormik$values5","_addressFormik$values6","_addressFormik$values7","addresses","setAddresses","addressFormik","isAdding","setIsAdding","handleAddressSubmit","editingAddressIndex","setEditingAddressIndex","isConfirmingDelete","setIsConfirmingDelete","deleteAddress","setDeleteAddress","useSelector","isFetching","refetch","useQuery","getUserAddress","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","retry","response","_response$data","item","includes","updateAddress","updateUserAddress","delAddress","isDeletingAddress","deleteUserAddress","_res$data","currentAddresses","removeAddress","address","handleEdit","FiEdit2","handleDelete","FiTrash2","resetForm","AiOutlinePlus","AnimatePresence","animate","exit","scale","cancelDelete","confirmDelete","addressId","rotate","e","stopPropagation","handleSave","updatedAddress","location","useLocation","navigate","useNavigate","selectedSection","setSelectedSection","targetSection","decodeURIComponent","hash","replace","isTablet","useMediaQuery","sidebarItems","FaUser","label","icon","FaMapLocationDot","MdOutlineMedicalServices","FaShoppingCart","getUserAddresses","setUserAddress","addAddress","addUserAddress","addressDetails","breadcrumbs","Link","to","Typography","MotionWrapper","Breadcrumbs","separator","handleSectionClick","sectionId","UserProfile","style","borderWidth","borderImage","borderStyle","width"],"sourceRoot":""}