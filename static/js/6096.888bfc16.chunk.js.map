{"version":3,"file":"static/js/6096.888bfc16.chunk.js","mappings":"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","sources":["shared/CustomTextField/index.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js","../node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","../node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js","../node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","../node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","../node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","../node_modules/@mui/utils/esm/useSlotProps/useSlotProps.js"],"sourcesContent":["/* eslint-disable no-undef */\nimport \"tailwindcss/tailwind.css\";\nimport { memo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport classNames from \"classnames\";\nimport { IconButton, InputAdornment } from \"@mui/material\";\n\nfunction CustomTextField({\n  className,\n  inputClassName,\n  onChange,\n  value,\n  name,\n  touched,\n  error,\n  handleBlur,\n  requiredStar,\n  disabledField,\n  maxLength,\n  autoComplete,\n  placeholder,\n  labelToShow,\n  textClassOverride,\n  placeholderClasses,\n  textFieldColorClass,\n  fieldWidth,\n  icon,\n  iconEnd,\n  type,\n  multiline,\n  rows,\n  regex,\n  textTransform,\n  iconOnClick,\n}) {\n  return (\n    <div className={`flex flex-col ${fieldWidth}`}>\n      {labelToShow && (\n        <div className=\"flex flex-row justify-between\">\n          <p\n            className={classNames(\n              \"text-sm font-medium pb-1\",\n              textClassOverride\n            )}\n          >\n            {labelToShow}\n            {requiredStar && <span className=\"text-bitterSweet\">*</span>}\n          </p>\n        </div>\n      )}\n      <div className={`${className}`}>\n        <div\n          className={`rounded-lg h-12 border ${textFieldColorClass} ${\n            disabledField && \"!bg-solitude-1\"\n          } !flex !items-center\n           ${error && touched && \"!border !border-bitterSweet\"}`}\n        >\n          <TextField\n            fullWidth\n            rows={rows}\n            multiline={multiline}\n            disabled={disabledField}\n            required={requiredStar}\n            variant=\"filled\"\n            placeholder={placeholder}\n            onBlur={handleBlur}\n            type={type}\n            InputProps={{\n              startAdornment: icon && (\n                <InputAdornment position=\"start\" className=\"!mt-0\">\n                  <IconButton\n                    className=\"!text-lg !px-0 !py-0\"\n                    onClick={iconOnClick}\n                  >\n                    {icon}\n                  </IconButton>\n                </InputAdornment>\n              ),\n              endAdornment: iconEnd && (\n                <InputAdornment position=\"end\" className=\"!mt-0\">\n                  <IconButton\n                    className=\"!text-lg !px-0 !py-0\"\n                    onClick={iconOnClick}\n                  >\n                    {iconEnd}\n                  </IconButton>\n                </InputAdornment>\n              ),\n              classes: {\n                input: `!text-sm !h-full !font-poppins !py-0 !pl-0   ${placeholderClasses}`,\n                root: `!rounded-lg !pl-3 !w-[96.5%] ${inputClassName} `,\n                disabled: `!bg-transparent ${disabledField && \"!bg-solitude-1\"}`,\n              },\n              disableUnderline: true,\n            }}\n            InputLabelProps={{\n              classes: {\n                root: \"!text-sm !text-licorice\",\n                shrink: \"!text-licorice !text-xs\",\n              },\n            }}\n            sx={{\n              \"& .MuiInputBase-input.Mui-disabled\": {\n                opacity: 10,\n                WebkitTextFillColor: \"rgba(0, 0, 0, 0.93)\",\n              },\n            }}\n            inputProps={{\n              maxLength,\n              autoComplete,\n            }}\n            onChange={(event) => {\n              if (\n                textTransform &&\n                textTransform?.toLowerCase() === \"uppercase\"\n              ) {\n                event.target.value = event.target.value\n                  .toString()\n                  .toUpperCase();\n              }\n              if (/[<>]/.test(event.target.value)) {\n                return;\n              }\n              if (regex && !regex.test(event.target.value)) {\n                return;\n              } else if (maxLength && event.target.value.length > maxLength) {\n                return;\n              }\n              if (type === \"number\") {\n                if (\n                  Number(event.target.value) ||\n                  Number(event.target.value) === 0\n                ) {\n                  const newValue = parseFloat(event.target.value) || 0;\n                  event.target.value = Math.max(newValue, 0);\n                  if (\n                    event.target.value.length === 1 &&\n                    event.target.value === \"0\"\n                  ) {\n                    event.target.value = \"\";\n                  }\n                  onChange(event);\n                } else {\n                  event.target.value = \"\";\n                  onChange(event);\n                }\n              } else {\n                onChange(event);\n              }\n            }}\n            value={value}\n            name={name}\n          />\n        </div>\n      </div>\n      {touched && error && (\n        <p className=\"mt-1 ml-1 text-xs text-bitterSweet\">{error}</p>\n      )}\n    </div>\n  );\n}\n\nexport default memo(CustomTextField);\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from '../isHostComponent';\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return _extends({}, otherProps, {\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\n  });\n}\nexport default appendOwnerState;","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport extractEventHandlers from '../extractEventHandlers';\nimport omitEventHandlers from '../omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n    const mergedStyle = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"elementType\", \"externalSlotProps\", \"ownerState\", \"skipResolvingSlotProps\"];\nimport useForkRef from '../useForkRef';\nimport appendOwnerState from '../appendOwnerState';\nimport mergeSlotProps from '../mergeSlotProps';\nimport resolveComponentProps from '../resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nfunction useSlotProps(parameters) {\n  var _parameters$additiona;\n  const {\n      elementType,\n      externalSlotProps,\n      ownerState,\n      skipResolvingSlotProps = false\n    } = parameters,\n    rest = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps(_extends({}, rest, {\n    externalSlotProps: resolvedComponentsProps\n  }));\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);\n  const props = appendOwnerState(elementType, _extends({}, mergedProps, {\n    ref\n  }), ownerState);\n  return props;\n}\nexport default useSlotProps;"],"names":["CustomTextField","_ref","className","inputClassName","onChange","value","name","touched","error","handleBlur","requiredStar","disabledField","maxLength","autoComplete","placeholder","labelToShow","textClassOverride","placeholderClasses","textFieldColorClass","fieldWidth","icon","iconEnd","type","multiline","rows","regex","textTransform","iconOnClick","_jsxs","concat","children","_jsx","classNames","TextField","fullWidth","disabled","required","variant","onBlur","InputProps","startAdornment","InputAdornment","position","IconButton","onClick","endAdornment","classes","input","root","disableUnderline","InputLabelProps","shrink","sx","opacity","WebkitTextFillColor","inputProps","event","toLowerCase","target","toString","toUpperCase","test","length","Number","newValue","parseFloat","Math","max","memo","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","overridesResolver","props","styles","ownerState","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","font","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","React","inProps","ref","themeProps","useDefaultProps","color","transformDeprecatedColors","extendSxProp","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","slots","composeClasses","useUtilityClasses","as","clsx","elementType","otherProps","undefined","isHostComponent","object","excludeKeys","arguments","result","Object","keys","filter","prop","match","includes","forEach","element","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","joinedClasses","mergedStyle","style","internalRef","eventHandlers","extractEventHandlers","componentsPropsWithoutEventHandlers","omitEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","componentProps","slotState","_parameters$additiona","skipResolvingSlotProps","rest","resolvedComponentsProps","resolveComponentProps","mergedProps","mergeSlotProps","useForkRef","appendOwnerState"],"sourceRoot":""}